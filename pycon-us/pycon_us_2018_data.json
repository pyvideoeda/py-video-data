[
    {
        "index": 1,
        "title": "Ewa Jodlowska - PSF Report & Community Service Awards - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=79AIzbjLzdk",
        "video_id": "79AIzbjLzdk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180516",
        "duration": 776,
        "view_count": 6029,
        "like_count": 31,
        "comment_count": null,
        "tags": [
            "psf community service awards",
            "awards",
            "pycon",
            "python",
            "coding"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi_webp/79AIzbjLzdk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=79AIzbjLzdk",
        "original_url": "https://www.youtube.com/watch?v=79AIzbjLzdk"
    },
    {
        "index": 2,
        "title": "Barry Warsaw - Get your resources faster, with importlib.resources - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ZsGFU2qh73E",
        "video_id": "ZsGFU2qh73E",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1722,
        "view_count": 16370,
        "like_count": 182,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "barry warsaw"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Barry Warsaw\n\nResources are files that live within Python packages.  Think test data files, certificates, templates, translation catalogs, and other static files you want to access from Python code.  Sometimes you put these static files in a package directory within your source tree, and then locate them by importing the package and using its `__file__` attribute.  But this doesn't work for zip files!\n\nYou could use `pkg_resources`, an API that comes with `setuptools` and hides the differences between files on the file system and files in a zip file.  This is great because you don't have to use `__file__`, but it's not so great because `pkg_resources` is a big library and can have potentially severe performance problems, even at import time.\n\nWelcome to `importlib.resources`, a new module and API in Python 3.7 that is also available as a standalone library for older versions of Python.  `importlib.resources` is build on top of Python's existing import system, so it is very efficient.  It also defines an abstract base class which loaders can implement to provide their own resource access.  Python's built-in zipimporter uses this to provide efficient access to resources within a zip file.  Third party import hooks can do the same, so resources can come from anything that is importable by Python.\n\nThis talk will step through the motivations behind `importlib.resources`, the library's usage, its interfaces, and the hooks made available to third party packages.  It will also talk about the minor differences between the standalone version and the version in Python 3.7's standard library.  Hopefully audience members will come away with compelling reasons to port their code to this much more efficient library.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/ZsGFU2qh73E/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZsGFU2qh73E",
        "original_url": "https://www.youtube.com/watch?v=ZsGFU2qh73E"
    },
    {
        "index": 3,
        "title": "Sunday Morning Lightning Talks + Keynote - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=tzFWz5fiVKU",
        "video_id": "tzFWz5fiVKU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 4756,
        "view_count": 7439,
        "like_count": 89,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "lightning talks",
            "keynote",
            "brett cannon"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Keynote Speaker: Brett Cannon",
        "thumbnail": "https://i.ytimg.com/vi_webp/tzFWz5fiVKU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=tzFWz5fiVKU",
        "original_url": "https://www.youtube.com/watch?v=tzFWz5fiVKU"
    },
    {
        "index": 4,
        "title": "Daniel Pyrathon - A practical guide to Singular Value Decomposition in Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=d7iIb_XVkZs",
        "video_id": "d7iIb_XVkZs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1874,
        "view_count": 17806,
        "like_count": 314,
        "comment_count": 14,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "daniel pyrathon"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Daniel Pyrathon\n\nRecommender systems have become increasingly popular in recent years, and are used by some of the largest websites in the world to predict the likelihood of a user taking an action on an item. In the world of Netflix, this means recommending similar movies to the ones you have seen. In the world of dating, this means suggesting matches similar to people you already showed interest in!\n\nMy path to recommenders has been an unusual one: from a Software Engineer to working on matching algorithms at a dating company, with a little background on machine learning. With my knowledge of Python and the use of basic SVD (Singular Value Decomposition) frameworks, I was able to understand SVDs from a practical standpoint of what you can do with them, instead of focusing on the science.\n\nIn my talk, you will learn 2 practical ways of generating recommendations using SVDs: matrix factorization and item similarity. We will be learning the high-level components of SVD the \"doer way\": we will be implementing a simple movie recommendation engine with the help of Jupiter notebooks, the MovieLens database, and the Surprise recommendation package.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/d7iIb_XVkZs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=d7iIb_XVkZs",
        "original_url": "https://www.youtube.com/watch?v=d7iIb_XVkZs"
    },
    {
        "index": 5,
        "title": "Mario Corchero - Effortless Logging: A deep dive into the logging module - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=Pbz1fo7KlGg",
        "video_id": "Pbz1fo7KlGg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1828,
        "view_count": 21844,
        "like_count": 268,
        "comment_count": 19,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "mario corchero"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Mario Corchero\n\nLogs are our best friend, especially on those late nights when we try to troubleshoot a problem in production that was written by a co-worker who is on vacation. Logs are the main way to know what is happening with an application at runtime, but we don’t realize how important they are until we actually need them. Unfortunately, they are usually an under-estimated part of the development process.\n\nThis talk aims to transmit the need for the logging module, briefly explains how to use it and how it is built, and dives into all the complexity that is hidden to us. This will help attendees not just understand all the magic that allows us to inspect our applications at runtime, but also to avoid mistakes and adapt the module to our needs for more esoteric scenarios.\n\nThe talk is structured to simplify the understanding of the logging module. Many people have read the documentation, but still struggle to fully understand what is happening under the hood. This talk aims to eliminate that barrier by presenting it in an easier-to-digest manner.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/Pbz1fo7KlGg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Pbz1fo7KlGg",
        "original_url": "https://www.youtube.com/watch?v=Pbz1fo7KlGg"
    },
    {
        "index": 6,
        "title": "Pieter Hooimeijer - Types, Deeper Static Analysis, and you - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=hWV8t494N88",
        "video_id": "hWV8t494N88",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1708,
        "view_count": 8594,
        "like_count": 119,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "pieter hooimeijer"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Pieter Hooimeijer\n\nMany projects already take advantage of static analysis tools like flake8, PyLint, and MyPy. Can we do better? In this talk, I'll discuss how to take a type checker, bolt on an interprocedural static analyzer, and delight your security team with high quality results.\n\nAbstract \n\nIt is incredibly challenging to build a halfway decent static analysis tool for a dynamic language like Python. Fortunately, it gets quite a bit easier with Python type annotations. To explain why, I'll present a tool that finds security vulnerabilities by tracking dangerous flows of information interprocedurally across an entire codebase. **Then,** I'll demonstrate how that tool is really just a slightly slower, more sophisticated, type checker.\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/hWV8t494N88/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hWV8t494N88",
        "original_url": "https://www.youtube.com/watch?v=hWV8t494N88"
    },
    {
        "index": 7,
        "title": "vigneshwer dhinakaran - Pumping up Python modules using Rust - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=UYpWVfTng4s",
        "video_id": "UYpWVfTng4s",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1840,
        "view_count": 3807,
        "like_count": 38,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "vigneshwer dhinakaran"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: vigneshwer dhinakaran\n\nIf you’ve spent much time writing (or debugging) Python performance problems, you’ve probably had a hard time managing memory with its limited language support. \n\nIn this talk, we venture deep into the belly of the Rust Language to uncover the secret incantations for building high performance and memory safe Python extensions using Rust. \n\nRust has a lot to offer in terms of safety and performance for high-level programming languages such Python, Ruby, Js and more with its easy Foreign Function Interface capabilities which enables developers to easily develop bindings for foreign code. \n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/UYpWVfTng4s/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=UYpWVfTng4s",
        "original_url": "https://www.youtube.com/watch?v=UYpWVfTng4s"
    },
    {
        "index": 8,
        "title": "Carl Meyer - Type-checked Python in the real world - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=pMgmKJyWKn8",
        "video_id": "pMgmKJyWKn8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1929,
        "view_count": 60077,
        "like_count": 1630,
        "comment_count": 73,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "carl meyer"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Carl Meyer\n\nYou've heard about Python type annotations, but wondered if they're useful in the real world? Worried you've got too much code and can't afford to annotate it?  Type-checked Python is here, it's for real, and it can help you catch bugs and make your code easier to understand. Come learn from our experience gradually typing a million-LOC production Python application!\n\nType checking solves real world problems in production Python systems. We'll cover the benefits, how type checking in Python works, how to introduce it gradually and sustainably in a production Python application, and how to measure success and avoid common pitfalls. We'll even demonstrate how modern Python typechecking goes hand-in-hand with duck-typing! Join us for a deep dive into type-checked Python in the real world.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/pMgmKJyWKn8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=pMgmKJyWKn8",
        "original_url": "https://www.youtube.com/watch?v=pMgmKJyWKn8"
    },
    {
        "index": 9,
        "title": "Amber Brown (\"HawkOwl\") - How We Do Identity Wrong - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=A5tPhUKljuY",
        "video_id": "A5tPhUKljuY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1937,
        "view_count": 2729,
        "like_count": 32,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "ambert brown"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Amber Brown (\"HawkOwl\")\n\nMost software has a user. Depending on the software, the user may need to provide various details about themselves for proper operation -- their name, their date of birth, where they live. However, it is quite common for software systems such as these to ask the wrong questions, collect too much data, and when it comes down to it, serialise the parts of the user's identity wrongly. This talk will discuss common ways that real-world systems store identity wrong, what questions you shouldn't ask, and how you can fix it in your own projects.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/A5tPhUKljuY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=A5tPhUKljuY",
        "original_url": "https://www.youtube.com/watch?v=A5tPhUKljuY"
    },
    {
        "index": 10,
        "title": "Alex Gaynor - Learning From Failure: Post Mortems - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=L9Y2ap6vIMg",
        "video_id": "L9Y2ap6vIMg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1763,
        "view_count": 4938,
        "like_count": 73,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "alex gaynor"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Alex Gaynor\n\nUnless you work on pacemakers or at NASA, you've probably accepted the fact that you will make mistakes in your code, and those mistakes will creep into production. This talk will introduce you to post-mortems, and how to use them as a vehicle for improving your code and your process.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/L9Y2ap6vIMg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=L9Y2ap6vIMg",
        "original_url": "https://www.youtube.com/watch?v=L9Y2ap6vIMg"
    },
    {
        "index": 11,
        "title": "Alvaro Leiva Geisse - Systemd: why you should care as a Python developer - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ZUX9Fx8Rwzg",
        "video_id": "ZUX9Fx8Rwzg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1622,
        "view_count": 10820,
        "like_count": 201,
        "comment_count": 14,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "alvaro leiva geisse"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Alvaro Leiva Geisse\n\nDone! Your shiny new application is functionally complete and ready to be deployed to production! But how exactly do you deploy properly on Linux? Wonder no more! In 30 minutes, this talk explains how you can harness the power of the init system and systemd to solve common deployment problems, including some that you didn't even know you had. Examples of things we will cover:\n\n* How to secure your system by having: private /tmp for your process, read-only paths so that your process can not write to them, inaccessible paths, protect users home, network access, bin directories, etc.\n* How to limit the resources you app can consume.\n* How to interact directly with systemd, so it can start transient units, start/stop services, mount disks, resolve addresses.\n* How to isolate your service without containers.\n* How to isolate your service using containers (using systemd to spawn a namespace).\n\nAll this will be covered from a Python developer's perspective.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/ZUX9Fx8Rwzg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZUX9Fx8Rwzg",
        "original_url": "https://www.youtube.com/watch?v=ZUX9Fx8Rwzg"
    },
    {
        "index": 12,
        "title": "Ned Batchelder - Big-O: How Code Slows as Data Grows - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=duvZ-2UK0fc",
        "video_id": "duvZ-2UK0fc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1731,
        "view_count": 30259,
        "like_count": 868,
        "comment_count": 30,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "ned batchelder"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Ned Batchelder\n\nBig-O is a computer science technique for analyzing how code performs as data gets larger.  It's a very handy tool for the working programmer, but it's often shrouded in off-putting mathematics.\n\nIn this talk, I'll teach you what you need to know about Big-O, and how to use it to keep your programs running well.  Big-O helps you choose the data structures and algorithms that will let your code work efficiently even on large data sets.\n\nYou can understand Big-O even if you aren't a theoretical computer science math nerd. Big-O isn't as mystical as it appears. It's wrapped in mathematical trappings, but doesn't have to be more than a common-sense assessment of how your code will behave.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/duvZ-2UK0fc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=duvZ-2UK0fc",
        "original_url": "https://www.youtube.com/watch?v=duvZ-2UK0fc"
    },
    {
        "index": 13,
        "title": "Greg Price - Clearer Code at Scale: Static Types at Zulip and Dropbox - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=0c46YHS3RY8",
        "video_id": "0c46YHS3RY8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1790,
        "view_count": 5837,
        "like_count": 92,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "greg price"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Greg Price\n\nPython now offers static types! Companies like Dropbox and Facebook, and open-source projects like Zulip, use static types (with [PEP 484](https://www.python.org/dev/peps/pep-0484/) and [mypy](https://github.com/python/mypy)) to make Python more productive and fun to work with — in existing codebases from 40k lines to 4 million, in Python 2 and 3, and while preserving the conciseness and flexibility that make Python a great language in the first place. I’ll describe how.\n\nReading and understanding code is a huge part of what we do as software developers. If we make it easier to understand our codebases, we make everyone more productive, help each other write fewer bugs, and lower barriers for new contributors. That's why Python now features optional static types, and why Dropbox, [Facebook](https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881), and [Zulip](https://blog.zulip.org/2016/10/13/static-types-in-python-oh-mypy/) use them on part or all of their Python code.\n\nIn this talk, I’ll share lessons from Zulip’s and Dropbox’s experience — having led the mypy team at Dropbox and working now on the Zulip core team — for how you can start using static types in your own codebases, large or small. We’ll discuss how to make it a seamless part of your project’s tooling; what order to approach things in; and powerful new tools that make it even easier today to add static types to your Python codebase than ever before.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/0c46YHS3RY8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0c46YHS3RY8",
        "original_url": "https://www.youtube.com/watch?v=0c46YHS3RY8"
    },
    {
        "index": 14,
        "title": "Claudio Freire - Efficient shared memory data structures - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=52zM4GgmqDE",
        "video_id": "52zM4GgmqDE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1635,
        "view_count": 5608,
        "like_count": 62,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "claudio freire"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Claudio Freire\n\nMultithreading makes shared memory easy, but true parallelism next to impossible. Multiprocessing gives us true parallelism, but it makes sharing memory very difficult, and high overhead. In this talk, we'll explore techniques to share memory between processes efficiently, with a focus on sharing read-only massive data structures.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/52zM4GgmqDE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=52zM4GgmqDE",
        "original_url": "https://www.youtube.com/watch?v=52zM4GgmqDE"
    },
    {
        "index": 15,
        "title": "Renato Oliveira - User focused API Design - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=q42hCs2E4So",
        "video_id": "q42hCs2E4So",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1647,
        "view_count": 2906,
        "like_count": 22,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "renato oliveira"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Renato Oliveira\n\nWhen we talk about Web API Design, we're usually driven to think in architecture, verbs, and nouns. But we often forget our user: the developer.\n\nUX designers rely on many techniques to create great experiences. User research, User Testing, Personas, Usage Data Analysis and others. However when creating `invisible products` we’re not used to think in usability. So why don’t we take advantage of this background to improve our APIs experiences?\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/q42hCs2E4So/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=q42hCs2E4So",
        "original_url": "https://www.youtube.com/watch?v=q42hCs2E4So"
    },
    {
        "index": 16,
        "title": "Steven Sklar - The Hare Wins the Race: Getting the most out of RabbitMQ in distributed applications",
        "url": "https://www.youtube.com/watch?v=WXkhJ92-fsY",
        "video_id": "WXkhJ92-fsY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1736,
        "view_count": 2367,
        "like_count": 56,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "steven sklar"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Steven Sklar\n\nAs web apps grow increasingly complex, distributing asynchronous work across multiple background workers is often a basic requirement of a performant app.  While there are a variety of tools that exist to solve this issue, one common feature among them is the need for a robust messaging platform.\n\n[RabbitMQ][1] is a stable, full-featured, and mature solution that is usually found in the Python ecosystem backing [Celery][2] implementations.  While Celery's utilization of RabbitMQ works just fine out of the gate, users with complex workflows, unique constraints, or tight budgets can take advantage of the flexibility of RabbitMQ to streamline their data pipelines and get the most out of their infrastructure.\n\nThis talk will provide an overview of RabbitMQ, review its varied message-routing capabilities, and demonstrate some of the ways in which these features can be utilized in Python applications to solve common yet difficult use-cases.\n\n  [1]: https://www.rabbitmq.com/\n  [2]: http://www.celeryproject.org/\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/WXkhJ92-fsY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WXkhJ92-fsY",
        "original_url": "https://www.youtube.com/watch?v=WXkhJ92-fsY"
    },
    {
        "index": 17,
        "title": "Zekun Li - There and Back Again: Disable and re-enable garbage collector at Instagram - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=WVnACT48CkE",
        "video_id": "WVnACT48CkE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1451,
        "view_count": 2292,
        "like_count": 41,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "zekun li"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Zekun Li\n\nPython's cyclic garbage collector wonderfully hides the complexity of memory management from the programmer. But we pay the price in performance. Ever wondered how that works? In this talk, you'll learn how garbage collection is designed in Python, what the tradeoffs are and how Instagram battled copy-on-write memory issues by disabling the garbage collector entirely.\n\nYou'll also learn why that isn't such a great idea after all and how we ended up extending the garbage collector API which allowed us to (mostly) re-enable garbage collection. We'll discuss our upstream contributions to the garbage collector that landed in Python 3.6 and 3.7.\n\nThis is an in-depth talk about memory management but no prior experience with CPython internals is necessary to follow it.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/WVnACT48CkE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WVnACT48CkE",
        "original_url": "https://www.youtube.com/watch?v=WVnACT48CkE"
    },
    {
        "index": 18,
        "title": "Kyle Knapp - Automating Code Quality - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=G1lDk_WKXvY",
        "video_id": "G1lDk_WKXvY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1785,
        "view_count": 10213,
        "like_count": 206,
        "comment_count": 11,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "kyle knapp"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Kyle Knapp\n\nWriting quality Python code can be both tough and tedious. On top of the general design, there are many code quality aspects that you need to watch out for when writing and reviewing code such as adherence to PEP8, docstring quality, test quality, etc. Furthermore, everyone is human. If you are catching these code quality issues by hand, there is a good chance that at some point you will miss an easy opportunity to improve code quality. If the quality check can be done by a machine, then why would you even try to catch the code quality issue by hand? In the end, the machine will be able to perform the quality check with much more speed, accuracy, and consistency than a person.\n\nThis talk will dive into how existing open source projects offload and automate many of these code quality checks resulting in:\n\n- A higher quality and a more consistent codebase\n- Maintainers being able to focus more on the higher level design and interfaces\n  of a project.\n- An improved contribution process and higher quality pull requests from\n  external contributors\n\nBy diving into how these open source projects automate code quality checks, you will learn about:\n\n- The available tooling related to checking code quality such as `flake8`,\n  `pylint`, `coverage`, etc.\n- How to automate code quality checks for both a development and team \n  setting.\n- First-hand accounts of the benefits and lessons learned from automating\n  code quality checks in real-life open source projects.\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/G1lDk_WKXvY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=G1lDk_WKXvY",
        "original_url": "https://www.youtube.com/watch?v=G1lDk_WKXvY"
    },
    {
        "index": 19,
        "title": "Catherine Devlin Keynote - Final Remarks - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=3kta4GB3PAw",
        "video_id": "3kta4GB3PAw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2695,
        "view_count": 1397,
        "like_count": 26,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "keynote",
            "service awards",
            "awards",
            "catherine devlin"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Keynote Speaker: Catherine Devlin",
        "thumbnail": "https://i.ytimg.com/vi_webp/3kta4GB3PAw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3kta4GB3PAw",
        "original_url": "https://www.youtube.com/watch?v=3kta4GB3PAw"
    },
    {
        "index": 20,
        "title": "Lightning Talks - Saturday Evening - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=c-I0md_3fbQ",
        "video_id": "c-I0md_3fbQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 4259,
        "view_count": 3014,
        "like_count": 30,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "lightning talks"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi_webp/c-I0md_3fbQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=c-I0md_3fbQ",
        "original_url": "https://www.youtube.com/watch?v=c-I0md_3fbQ"
    },
    {
        "index": 21,
        "title": "Trey Hunner - Python 2 to 3: How to Upgrade and What Features to Start Using - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=klaGx9Q_SOA",
        "video_id": "klaGx9Q_SOA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1559,
        "view_count": 8961,
        "like_count": 97,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "trey hunner"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Trey Hunner\n\nThe end of life for Python 2 is 2020. Python 3 is the future and you'll need to consider both your upgrade plan and what steps you'll take after upgrading to start leveraging Python 3 features.\n\nDuring this talk we'll briefly discuss how to start **the process of upgrading your code to Python 3**. We'll then dive into some of **the most useful Python 3 features** that you'll be able to start embracing once you drop Python 2 support.\n\nA number of the most powerful Python 3 features are syntactic features that are **Python 3 only**. You won't get any experience using these features until you fully upgrade. These features are an incentive to drop Python 2 support in existing 2 and 3 compatible code. You can consider this talk as a teaser of Python 3 features that you may have never used.\n\nAfter this talk I hope you'll be inspired to fully upgrade your code to Python 3.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/klaGx9Q_SOA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=klaGx9Q_SOA",
        "original_url": "https://www.youtube.com/watch?v=klaGx9Q_SOA"
    },
    {
        "index": 22,
        "title": "Sara Packman - The Journey Over the Intermediate Gap - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=49CIIu1XkIE",
        "video_id": "49CIIu1XkIE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1629,
        "view_count": 7987,
        "like_count": 137,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "sara packman"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Sara Packman\n\nCongratulations on finishing your first tutorials or classes in python! In the parlance of the hero’s journey myth, you’ve had your ‘threshold moment”: you’ve started down a path that could lead to a long and fulfilling career. But the road to this glorious future is frustratingly obscured by a lack of guidance in the present. You know enough to realize that you don’t have all the skills you need yet, but it’s hard to know how to learn those skills, or even articulate what they are. There are no easy solutions to this problem. There are, however, a few fundamental things to know and advice to keep in mind. Drawing from my own experience and with input from others, I’ve compiled some helpful hints about the skills, tools, and guiding questions that will get you to mastery.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/49CIIu1XkIE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=49CIIu1XkIE",
        "original_url": "https://www.youtube.com/watch?v=49CIIu1XkIE"
    },
    {
        "index": 23,
        "title": "Rae Knowler - Python, Locales and Writing Systems - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=EEV4G6rh-KQ",
        "video_id": "EEV4G6rh-KQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2103,
        "view_count": 1418,
        "like_count": 16,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "rae knowler"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Rae Knowler\n\nPython 3 removes a lot of the confusion around Unicode handling in Python, but that by no means fixes everything. Different locales and writing systems have unique behaviours that can trip you up. Here’s some of the worst ones and how to handle them correctly.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/EEV4G6rh-KQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=EEV4G6rh-KQ",
        "original_url": "https://www.youtube.com/watch?v=EEV4G6rh-KQ"
    },
    {
        "index": 24,
        "title": "Matt Davis - Python Performance Investigation by Example - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=yrRqNzJTBjk",
        "video_id": "yrRqNzJTBjk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1835,
        "view_count": 10130,
        "like_count": 127,
        "comment_count": 8,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "matt davis"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Matt Davis\n\nOccasionally we’ll find that some bit of Python we’ve written doesn’t run as fast as we’d like, what can we do? Performance bottlenecks aren’t always intuitive or easy to spot by reading code so we need to collect data with [profiling](https://docs.python.org/3.6/library/profile.html). Once we’ve identified the bottleneck we’ll need to change our approach, but what options are faster than others?\n\nThis talk illustrates a Python performance investigation and improvements using an [Advent of Code](http://www.adventofcode.com/) programming challenge. I’ll walk through starting from a slow (but correct) solution, look at profiling data to investigate _why_ it’s slow, and explore multiple paths for improving performance, including more efficient algorithms and using third-party tools like [Cython](http://cython.org/). You’ll leave this talk with a recipe for analyzing Python performance and information about some options for improved performance.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/yrRqNzJTBjk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=yrRqNzJTBjk",
        "original_url": "https://www.youtube.com/watch?v=yrRqNzJTBjk"
    },
    {
        "index": 25,
        "title": "Mariatta Wijaya - What is a Python Core Developer? - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=hhj7eb6TrtI",
        "video_id": "hhj7eb6TrtI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2173,
        "view_count": 4613,
        "like_count": 79,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "mariatta wijaya"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Mariatta Wijaya\n\nHow do you become a Python core developer? How can I become one? What is it like to be a Python core developer?\n\nThese are the questions I often receive ever since I became a Python core developer a year ago. Contributing to Python is a long journey that does not end when one earns the commit privilege. There are responsibilities to bear and expectations to live up to.\n\nIn the past year, I've been learning more about what it really means to be a Python core developer. Let me share all of that with you.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/hhj7eb6TrtI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hhj7eb6TrtI",
        "original_url": "https://www.youtube.com/watch?v=hhj7eb6TrtI"
    },
    {
        "index": 26,
        "title": "Jason Fried - Fighting the Good Fight: Python 3 in your organization - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=H4SS9yVWJYA",
        "video_id": "H4SS9yVWJYA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1848,
        "view_count": 4919,
        "like_count": 57,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "jason fried"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jason Fried\n\nToday, services built on Python 3.6.3 are widely used at Facebook. But as recently as May of 2014 it was actually impossible at all to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 while older Python 2 projects are actively migrated to Python 3. All accomplished by a small group of individual contributors in their spare time. Learn to fight the good fight and upgrade your organization to Python 3 like we did at Facebook.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/H4SS9yVWJYA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=H4SS9yVWJYA",
        "original_url": "https://www.youtube.com/watch?v=H4SS9yVWJYA"
    },
    {
        "index": 27,
        "title": "James Bennett - A Bit about Bytes: Understanding Python Bytecode - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=cSSpnq362Bk",
        "video_id": "cSSpnq362Bk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1784,
        "view_count": 26798,
        "like_count": 771,
        "comment_count": 27,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "james bennett"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: James Bennett\n\nAt some point every Python programmer sees Python bytecode files -- they're those '.pyc' files Python likes to leave behind after it runs. But have you ever wondered what's really going on in those files? Well, wonder no more! In this talk you'll learn what Python bytecode is and how it's used to execute your code, as well as how to decipher and read it, and how to reason about bytecode to understand the performance of your Python code.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/cSSpnq362Bk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cSSpnq362Bk",
        "original_url": "https://www.youtube.com/watch?v=cSSpnq362Bk"
    },
    {
        "index": 28,
        "title": "Hynek Schlawack - How to Write Deployment-friendly Applications - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=wuCpCkrfeMs",
        "video_id": "wuCpCkrfeMs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2660,
        "view_count": 6157,
        "like_count": 107,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "hynek schlawack"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Hynek Schlawack\n\nThe DevOps movement gave us many ways to put Python applications into production.  But should your *application* care?  Should it need to know whether it’s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service?\n\nIt should not, because environment-agnostic applications are easier to **test**, easier to **deploy**, easier to **handle**, and easier to **scale**.\n\nBut how can you *practically* structure and configure your applications to make them indifferent to the environment they run in?  How do secrets fit into the picture?  And where do you put that log file?\n\nBy the end of this talk you’ll know the tools and techniques that enable you to write such Python applications and you’ll be ready for the next big change.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/wuCpCkrfeMs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=wuCpCkrfeMs",
        "original_url": "https://www.youtube.com/watch?v=wuCpCkrfeMs"
    },
    {
        "index": 29,
        "title": "Graham Dumpleton - Secrets of a WSGI master. - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=CPz0s1CQsTE",
        "video_id": "CPz0s1CQsTE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1975,
        "view_count": 13628,
        "like_count": 261,
        "comment_count": 10,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "graham dumpleton"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Graham Dumpleton\n\nThe WSGI (Web Server Gateway Interface) specification for hosting Python web applications was created in 2003. Measured in Internet time, it is ancient. The oldest main stream implementation of the WSGI specification is mod_wsgi, for the Apache HTTPD server and it is over 10 years old.\n\nWSGI is starting to be regarded as not up to the job, with technologies such as HTTP/2, web sockets and async dispatching being the way forward. Reality is that WSGI will be around for quite some time yet and for the majority of use cases is more than adequate.\n\nThe real problem is not that we need to move to these new technologies, but that we aren't using the current WSGI servers to their best advantage. Moving to a new set of technologies will not necessarily make things better and will only create a new set of problems you have to solve.\n\nAs one of the oldest WSGI server implementations, Apache and mod\\_wsgi may be regarded as boring and not cool, but it is still the most stable option for hosting WSGI applications available. It also hasn't been sitting still, with a considerable amount of development work being done on mod\\_wsgi in the last few years to make it even more robust and easier to use in a development environment as well as production, including in containerised environments.\n\nIn this talk you will learn about many features of mod\\_wsgi which you probably didn't even know existed, features which can help towards ensuring your Python web application deployment performs to its best, is secure, and has a low maintenance burden.\n\nTopics which will be covered include:\n\n* Easy deployment of Python web applications using mod\\_wsgi-express.\n* Integration of mod_wsgi-express with a Django web application.\n* Using mod\\_wsgi-express in a development environment.\n* How to make use of mod\\_wsgi-express in a production environment.\n* Using mod_wsgi-express in a containerised runtime environment.\n* Ensuring consistency between development and production environments using warpdrive.\n* Using mod\\_wsgi-express to bootstrap a system Apache installation for hosting WSGI applications.\n* Why you should be using daemon mode of mod\\_wsgi and not embedded mode.\n* How to properly associate mod\\_wsgi with a Python virtual environment.\n* Building a robust deployment that can recover from misbehaving application code, backend services, or request overloading.\n* Using hooks provided by mod\\_wsgi to monitor the performance of your Python web application.\n\nIf you are a beginner, come learn why mod\\_wsgi is still a good option for deploying your Python web applications. If you are an old time user of mod\\_wsgi, find out about all the features you probably didn't know existed, revisit your current Python web application deployment and make it even better.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/CPz0s1CQsTE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CPz0s1CQsTE",
        "original_url": "https://www.youtube.com/watch?v=CPz0s1CQsTE"
    },
    {
        "index": 30,
        "title": "VM (Vicky) Brasseur - The human nature of failure & resiliency - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=h-38HZqanJs",
        "video_id": "h-38HZqanJs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2683,
        "view_count": 880,
        "like_count": 19,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "vicky brasseur",
            "vm vicky brasseur"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: VM (Vicky) Brasseur\n\nProjects fail in droves. Systems hiccup and hours of downtime follows. Screws fall out all the time; the world is an imperfect place.\n\nWe talk a lot about building resilient systems, but all systems are (at least for now) built by humans. Humans who have been making the same types of mistakes for thousands of years. \n\nJust because failure happens doesn’t mean we can’t do our best to prevent it or—at the very least—to minimize the damage when it does. As a matter of fact, embracing failure can be one of the best things you do for your system. Failure is a vital part of evolution. By learning to love failure we learn how to take the next step forward. Ignoring or punishing failure leads to stagnation and wasted potential.\n\nThis talk distills 3000 pages of failure research into 40 minutes of knowledge about the human factors of failure, how it can be recognised, and how you can work around it to create more resilient systems.\n\nBy the end of this talk the audience will have an awareness of the most common psychological reasons for mistakes and failures and how to develop systems and processes to protect against them.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/h-38HZqanJs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=h-38HZqanJs",
        "original_url": "https://www.youtube.com/watch?v=h-38HZqanJs"
    },
    {
        "index": 31,
        "title": "Paul Vincent Craven - Easy 2D Game Creation With Arcade - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=DAWHMHMPVHU",
        "video_id": "DAWHMHMPVHU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1788,
        "view_count": 16017,
        "like_count": 315,
        "comment_count": 11,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "paul vincent craven"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Paul Vincent Craven\n\nWant to have fun with Python? Do something visual? Get started today? Learn how to draw, animate, and use sprites for games with the [Python Arcade](http://arcade.academy/) library.\n\n\"Arcade\" is an easy-to-use Python library for creating 2D arcade games. We'll show you how to get started creating your own game, and find plenty of example code to get an idea of what you can do with this library. If you are familiar with PyGame, Arcade is easier, more powerful, and uses recent Python features like type hinting and decorators.\n\nThis talk is great for beginners, educators, and people who want to create their own arcade games.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/DAWHMHMPVHU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=DAWHMHMPVHU",
        "original_url": "https://www.youtube.com/watch?v=DAWHMHMPVHU"
    },
    {
        "index": 32,
        "title": "Dmitry Filippov, Ewa Jodlowska - By the Numbers: Python Community Trends in 2017/2018 - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=xEE4X-9RROM",
        "video_id": "xEE4X-9RROM",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1541,
        "view_count": 1248,
        "like_count": 11,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "dmitry filippov"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Dmitry Filippov, Ewa Jodlowska\n\nWant to know about the latest trends in the Python community and see the the big picture of how things have changed over the last few years? Interested in the results of the latest official Python Developers Survey 2017 which was supported by the Python Software Foundation and gathered responses from more than 10.000 Python developers? Come learn about the most popular types of Python development, trending frameworks, libraries and tools, additional languages being used by Python developers, Python versions usage statistics and many other insights from the world of Python. All derived from the actual data and professional research such as the Python Developers Survey 2017 which collected responses from over 10.000 Python developers, organized in partnership between the Python Software Foundation and JetBrains, the Python Developers Survey 2016, 3rd party surveys and supplementary analytical research.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/xEE4X-9RROM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=xEE4X-9RROM",
        "original_url": "https://www.youtube.com/watch?v=xEE4X-9RROM"
    },
    {
        "index": 33,
        "title": "Kenneth Reitz - Pipenv: The Future of Python Dependency Management - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=GBQAKldqgZs",
        "video_id": "GBQAKldqgZs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2144,
        "view_count": 54061,
        "like_count": 1067,
        "comment_count": 53,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "kenneth reitz"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Kenneth Reitz\n\nThis talk is about the history of Python packaging, the tools that have been historically available for application deployment, the problems/constraints presented by them, and presents a holistic solution to many of these problems: Pipenv.\n\nA live demo of the tool will be presented, as well as a Q&A session.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/GBQAKldqgZs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GBQAKldqgZs",
        "original_url": "https://www.youtube.com/watch?v=GBQAKldqgZs"
    },
    {
        "index": 34,
        "title": "Christopher Fonnesbeck -  Bayesian Non-parametric Models for Data Science using PyMC3 - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=-sIOMs4MSuA",
        "video_id": "-sIOMs4MSuA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2544,
        "view_count": 13212,
        "like_count": 253,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "christopher fonnesbeck"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Christopher Fonnesbeck\n\nNowadays, there are many ways of building data science models using Python, including statistical and machine learning methods. I will introduce probabilistic models, which use Bayesian statistical methods to quantify all aspects of uncertainty relevant to your problem, and provide inferences in simple, interpretable terms using probabilities.  A particularly flexible form of probabilistic models uses Bayesian *non-parametric* methods, which allow models to vary in complexity depending on how much data are available. In doing so, they avoid the over-fitting that is common in machine learning and statistical modeling. I will demonstrate the basics of Bayesian non-parametric modeling in Python, using the PyMC3 package. Specifically, I will introduce two common types, Gaussian processes and Dirichlet processes, and show how they can be applied easily to real-world problems using two examples.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/-sIOMs4MSuA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-sIOMs4MSuA",
        "original_url": "https://www.youtube.com/watch?v=-sIOMs4MSuA"
    },
    {
        "index": 35,
        "title": "Scott Triglia - Surviving (and thriving!) when you are overloaded - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=dWuRDbH4Xlw",
        "video_id": "dWuRDbH4Xlw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1635,
        "view_count": 1827,
        "like_count": 44,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "scott triglia"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Scott Triglia\n\nTaking on leadership roles always includes new demands on your attention and time. Inevitably, your finite work week will conflict with the sheer amount of tasks you have to do. How can we as leaders keep stepping up to new responsibilities while balancing our pre-existing ones?\n\nThis talk will focus on strategies for managing a too-large workload without abandoning important tasks or doing a shoddy job. We’ll look at techniques to prioritize what work matters most, identify tasks we should be doing ourselves, and finally delegate the rest to build our team’s skills while reducing our own workload.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/dWuRDbH4Xlw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dWuRDbH4Xlw",
        "original_url": "https://www.youtube.com/watch?v=dWuRDbH4Xlw"
    },
    {
        "index": 36,
        "title": "Russell Keith-Magee - Building a cross-platform native app with BeeWare - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=qaPzlIJ57dk",
        "video_id": "qaPzlIJ57dk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1850,
        "view_count": 36406,
        "like_count": 663,
        "comment_count": 28,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "russell keith-magee"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Russell Keith-Magee\n\nHave you ever wanted to write a GUI application you can run on your laptop? What about an app that you can run on your phone? Historically, these have been difficult to achieve with Python, and impossible to achieve without learning a different API for each platform. But no more.\n\nBeeWare is a collection of tools and libraries that allows you to build cross-platform native GUI applications in pure Python, targeting desktop, mobile and web platforms. In this talk, you'll be introduced to the BeeWare suite of tools and libraries, and see how you can use them to develop, from scratch, a GUI ChatBot application that can be deployed as a standalone desktop application, a mobile phone application, and a single page webapp - without making any changes to the application's codebase.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/qaPzlIJ57dk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=qaPzlIJ57dk",
        "original_url": "https://www.youtube.com/watch?v=qaPzlIJ57dk"
    },
    {
        "index": 37,
        "title": "Lilly Ryan - Don't Look Back in Anger: Wildman Whitehouse and the Great Failure of 1858 - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=GuNoaAFnTPg",
        "video_id": "GuNoaAFnTPg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1813,
        "view_count": 911,
        "like_count": 19,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "lilly ryan"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Lilly Ryan\n\nIn the 1850s, Edward Orange Wildman Whitehouse was appointed the lead engineer of the first attempt to build a trans-Atlantic telegraph cable. With the entire population of two continents waiting for his go-live, their handlebar moustaches aquiver, he demonstrated in fine form just how spectacularly a big project can be a bigger disaster.\n\nThis is a tale of long-winded rants, spectacular sideburns, and gentlemen scientists behaving badly. It is also a lesson about the importance of honest reflection in technical teamwork. Lilly outlines some of the mistakes made during one of the biggest tech delivery projects in history, and how a constructive view of failure helped to turn it all around. Through the public meltdowns of Wildman Whitehouse you will learn the importance of feedback, how to handle complex tasks gracefully, and the best way to recover from having your pipeline eaten by a whale.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/GuNoaAFnTPg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GuNoaAFnTPg",
        "original_url": "https://www.youtube.com/watch?v=GuNoaAFnTPg"
    },
    {
        "index": 38,
        "title": "Raymond Hettinger - Dataclasses:  The code generator to end all code generators - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=T-TwcmT6Rcw",
        "video_id": "T-TwcmT6Rcw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2708,
        "view_count": 126849,
        "like_count": 1795,
        "comment_count": 46,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "raymond hettinger"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Raymond Hettinger\n\nThe PEP 557 dataclasses module is available in starting in Python 3.7.   It will become an essential part of every Python programmer's toolkit.  This talk shows what problem the module solves, explains its key design decisions, and provides practical examples of how to put it to work.\n\nDataclasses are shown to be the next step in a progression of data aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, records, attrs, and then dataclasses. Each builds upon the one that came before, adding expressiveness at the expense of complexity.\n\nDataclasses are unique in that they let you selectively turn-on or turn-off its various capabilities and it lets the user choose the underlying data store (either instance dictionary, instance slots, or an inherited base class).\n\nDataclasses and typing.NamedTuple both use variable annotations which were new in Python 3.6.\n\n\n\n\n\n\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/T-TwcmT6Rcw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=T-TwcmT6Rcw",
        "original_url": "https://www.youtube.com/watch?v=T-TwcmT6Rcw"
    },
    {
        "index": 39,
        "title": "Shannon Turner - You're an expert. Here's how to teach like one. - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=3m555yWTaNI",
        "video_id": "3m555yWTaNI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1687,
        "view_count": 2418,
        "like_count": 63,
        "comment_count": 6,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "shannon turner"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Shannon Turner\n\nKnowing how to code and being able to teach it are two separate skills. When we have expertise in a subject, it's common to take for granted that we'll be able to effectively communicate our expertise to someone else. Come learn (or re-learn!) how to teach and discover practical examples you can put to work right away.\n\nBy sharpening your teaching skills, you'll be a more effective mentor, trainer, and team member.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/3m555yWTaNI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3m555yWTaNI",
        "original_url": "https://www.youtube.com/watch?v=3m555yWTaNI"
    },
    {
        "index": 40,
        "title": "Colin Carroll, Karin C. Knudson - Fighting Gerrymandering with PyMC3 - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=G9I5ZnkWR0A",
        "video_id": "G9I5ZnkWR0A",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1803,
        "view_count": 1513,
        "like_count": 26,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "colin carroll",
            "karin knudson"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Colin Carroll, Karin C. Knudson\n\nAt the end of 2017, there were seven states with ongoing redistricting litigation.  We will discuss a statistical model that the United States Supreme Court declared to be appropriate in cases of racial gerrymandering, and show how it can be implemented and used with the library `PyMC3`.  We will also discuss what the model tells us about racial gerrymandering in North Carolina.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/G9I5ZnkWR0A/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=G9I5ZnkWR0A",
        "original_url": "https://www.youtube.com/watch?v=G9I5ZnkWR0A"
    },
    {
        "index": 41,
        "title": "Victor Stinner - Python 3: ten years later - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=Aj3KMefwOqI",
        "video_id": "Aj3KMefwOqI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2583,
        "view_count": 3418,
        "like_count": 36,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "victor stinner"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Victor Stinner\n\nLooking back at Python evolutions over the last 10 years.\n\nPython 3.0 was released ten years ago (December 2008). It's time to look back: analyze the migration from Python 2 to Python 3, see the progress we made on the language, list bugs by cannot be fixed in Python 2 because of the backward compatibility, and discuss if it's time or not to bury Python 2.\n\nPython became the defacto language in the scientific world and the favorite programming language as the first language to learn programming.\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/Aj3KMefwOqI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Aj3KMefwOqI",
        "original_url": "https://www.youtube.com/watch?v=Aj3KMefwOqI"
    },
    {
        "index": 42,
        "title": "Justin Myles Holmes - Python across the USA: This is the Bus. - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=tRp84BlFF94",
        "video_id": "tRp84BlFF94",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1496,
        "view_count": 801,
        "like_count": 10,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "justin myles holmes"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Justin Myles Holmes\n\nFor 2 years, a family of three has traveled on a converted school bus from conference to conference, building tooling for the road in Python and visiting Python families in every corner of the country.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/tRp84BlFF94/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=tRp84BlFF94",
        "original_url": "https://www.youtube.com/watch?v=tRp84BlFF94"
    },
    {
        "index": 43,
        "title": "Nicolle Cysneiros - Graph Databases: Talking about your Data Relationships with Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=J8LvW-tyLRc",
        "video_id": "J8LvW-tyLRc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2730,
        "view_count": 2635,
        "like_count": 36,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "nicolle cysneiros"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Nicolle Cysneiros\n\nHave you ever considered how many relationships you have in your virtual life? Every friend or page liked on Facebook, each connection in LinkedIn or Twitter account followed is a new relationship not only between two people, but also between their data. In Brazil only, we have 160 millions Facebook users. How can we represent and manipulate all these relationships? Graph Databases are storage systems that use graph structure (nodes and edges) to represent and store data in a semantic way.\n\nThis talk will begin approaching the challenge in representing relationships in Relational Databases and introducing a more friendly solution using graph. The definition of Graph Database, its pros and cons and some available tools (Neo4J, OrientDB and TitanDB) will be shown during the presentation, as well as how these tools can be integrated with Python.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/J8LvW-tyLRc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=J8LvW-tyLRc",
        "original_url": "https://www.youtube.com/watch?v=J8LvW-tyLRc"
    },
    {
        "index": 44,
        "title": "Nir Arad - Controlling apples with snakes: Automating mobile apps with Appium - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=-ltFl1vbe6I",
        "video_id": "-ltFl1vbe6I",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1666,
        "view_count": 4405,
        "like_count": 23,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "nir arad"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Nir Arad\n\nTesting mobile applications is hard. Testing manually is nearly impossible.\nThat’s where automated testing shines. Just sit back and watch the machine go!\nPython is a very powerful language for writing automated tests, but since Python is not installed on mobile platforms, we need to find a way to remotely control and monitor the device.\nBut how do we automate a device remotely? The answer is Appium.\n\nIn this talk I will go over the process of deploying and testing iOS (or Android) applications, and how to work with Appium to easily generate Python 3 code for testing your application.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/-ltFl1vbe6I/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-ltFl1vbe6I",
        "original_url": "https://www.youtube.com/watch?v=-ltFl1vbe6I"
    },
    {
        "index": 45,
        "title": "Miguel Grinberg - Oops! I Committed My Password To GitHub! - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=2uaTPmNvH0I",
        "video_id": "2uaTPmNvH0I",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1783,
        "view_count": 8852,
        "like_count": 143,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "miguel grinberg"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Miguel Grinberg\n\nWhat do AWS, GitHub, Travis CI, DockerHub, Google, Stripe, New Relic, and the rest of the myriad of services that make our developer life easier have in common?\n They all give you secret keys to authenticate with. Did you ever commit one of these to source control by mistake? That happened to me more times than I'm willing to admit!\n\nIn this talk I'm going to go over the best practices to follow when when writing Python applications that prevent this type of accident.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/2uaTPmNvH0I/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=2uaTPmNvH0I",
        "original_url": "https://www.youtube.com/watch?v=2uaTPmNvH0I"
    },
    {
        "index": 46,
        "title": "Matthew Rocklin - Democratizing Distributed Computing with Dask and JupyterHub - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=Iq72dt1gO9c",
        "video_id": "Iq72dt1gO9c",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1925,
        "view_count": 5970,
        "like_count": 85,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "matthew rocklin"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Matthew Rocklin\n\nWe use JupyterHub, XArray, Dask, and Kubernetes to build a cloud-based system to enable scientists to analyze and manage large datasets.  We use this in practice to serve a broad community of atmospheric and climate scientists.\n\nAtmospheric and climate scientists analyze large volumes of observational and simulated data to better understand our planet.  They have historically used tools like NumPy and SciPy along with Jupyter notebooks to combine efficient computation with accessibility.  However, as datasets increase in size and collaboration extends to new populations of scientists these tools begin to feel their age.  In this talk we use more recent libraries to build a modern deployment for academic scientists.  In particular we use the following tools:\n\n- **Dask:** to parallelize and scale NumPy computations\n- **XArray**: as a self-discribing data model and tool kit for labeled and index arrays\n- **JupyterLab:** to enable more APIs for users beyond the classic notebook\n- **JupyterHub:** to manage users and maintain environments for a new population of cloud-friendly users\n- **Kubernetes:** to manage everything and deploy easily on cloud hardware\n\nThis talk will focus less on how these libraries work and will instead be a case study of using them together in an operational setting.  During the talk we will build up and deploy a running system that the audience can then use to access distributed computing resources.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/Iq72dt1gO9c/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Iq72dt1gO9c",
        "original_url": "https://www.youtube.com/watch?v=Iq72dt1gO9c"
    },
    {
        "index": 47,
        "title": "Larry Hastings - Solve Your Problem With Sloppy Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=Jd8ulMb6_ls",
        "video_id": "Jd8ulMb6_ls",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1824,
        "view_count": 42076,
        "like_count": 802,
        "comment_count": 46,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "larry hastings"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Larry Hastings\n\nStop writing crappy shell scripts—write crappy Python scripts instead!\n\nOther talks will show you how to write clean, performant, robust Python.  But that's not always necessary.  When writing personal automation or solving one-shot problems, it can be safe (and fun!) to quickly hack something together.\n\nThis talk will show examples of problems suitable for this approach, scenarios where it's reasonable to cut corners, novel techniques that can help break a problem down, and shortcuts that can speed development.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/Jd8ulMb6_ls/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Jd8ulMb6_ls",
        "original_url": "https://www.youtube.com/watch?v=Jd8ulMb6_ls"
    },
    {
        "index": 48,
        "title": "Janet Matsen - Programming microbes using Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=5lYWxjSitIg",
        "video_id": "5lYWxjSitIg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1496,
        "view_count": 4186,
        "like_count": 85,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "janet matsen"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Janet Matsen\n\nThe genome of a typical microbe contains roughly 5 million base pairs of DNA including more than 4000 genes, which provide the instructions for cellular replication, energy metabolism, and other biological processes. At Zymergen, we edit DNA to design microbes with improved ability to produce valuable materials and molecules. Microbes with these edits are built and tested in high throughput by our fleet of robots. Genomes are far too large for exhaustive search, so identifying which edits to make requires machine learning on non-standard features. Our task to extract information from trees, networks, and graphs of independently representable knowledge bases (metabolism, genomics, regulation), in ways that respect the strongly causal relationships between systems. In this talk, I will describe how we use Python’s biological packages (e.g. BioPython, CobraPy, Escher, goatools) and other packages (NetworkX, TensorFlow, PyStan, AirFlow) to extract machine learning features and predict which genetic edits will produce high-performance microbes.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/5lYWxjSitIg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=5lYWxjSitIg",
        "original_url": "https://www.youtube.com/watch?v=5lYWxjSitIg"
    },
    {
        "index": 49,
        "title": "Jack Diederich - HOWTO Write a Function - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=rrBJVMyD-Gs",
        "video_id": "rrBJVMyD-Gs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2490,
        "view_count": 75654,
        "like_count": 1255,
        "comment_count": 52,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "jack diederich"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jack Diederich\n\nA function is a small chunk of code that does useful work. Your job when writing a function is to do it in a way that it easy to read. Based on over 15 years of code reviews here are some tips and guidelines I give again and again. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/rrBJVMyD-Gs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rrBJVMyD-Gs",
        "original_url": "https://www.youtube.com/watch?v=rrBJVMyD-Gs"
    },
    {
        "index": 50,
        "title": "Esther Nam - One weird trick to becoming a better software developer - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=IYWlfVqBQLc",
        "video_id": "IYWlfVqBQLc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1702,
        "view_count": 16657,
        "like_count": 304,
        "comment_count": 9,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "esther nam"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Esther Nam\n\nThose of us who have worked in software development for longer than a few years probably feel we have an intuitive sense of what a great developer is. Some traits come more easily to mind than others when it comes to identifying a great developer. In this talk we will take a slightly different approach to evaluating software development best practices, and identify one underrated skill common to great software developers: empathy. I hope to demonstrate that cognitive and emotional empathy skills are critical to good software development. We will explore ways to cultivate this trait in order to become better developers, both for our own sakes and for the sake of the teams in which we work.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/IYWlfVqBQLc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=IYWlfVqBQLc",
        "original_url": "https://www.youtube.com/watch?v=IYWlfVqBQLc"
    },
    {
        "index": 51,
        "title": "Erin Braswell - Python Data Sonification for Science and Discovery - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=3EXvR1shVFQ",
        "video_id": "3EXvR1shVFQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1571,
        "view_count": 4740,
        "like_count": 128,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "erin braswell"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Erin Braswell\n\nWhat do geiger counters, black holes, heart monitors, and volcanoes have in common?  They all can use sound to convey information! This talk will explore using python for sonification: the process of translating data into sound that could otherwise be represented visually. Have you ever wondered how to use python to represent data other than making charts and graphs?  Are you a musician looking for inspiration in the world around you?  This talk will go over how to use python to translate time series data to MIDI that can be played back in real time. We’ll sonically interpret light-curve data from the Kepler space telescope using pygame, MIDIUtil, and astropy, turning points on a graph into a musical masterpiece! Come learn about how data sonification is used to help people, to expand the reach of scientific research, and to create music from data.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/3EXvR1shVFQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3EXvR1shVFQ",
        "original_url": "https://www.youtube.com/watch?v=3EXvR1shVFQ"
    },
    {
        "index": 52,
        "title": "Dustin Ingram - Inside the Cheeseshop: How Python Packaging Works - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=AQsZsgJ30AE",
        "video_id": "AQsZsgJ30AE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1514,
        "view_count": 10849,
        "like_count": 227,
        "comment_count": 8,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "dustin ingram"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Dustin Ingram\n\nQuestions and confusion about the Python packaging ecosystem abound. What is this `setup.py` file? What's the difference between wheels and eggs? Do I use setuptools or distutils? Why should I use twine? Do I put my projects dependencies in a `requirements.txt` or in `setup.py`? How do I just get my module up on PyPI? Wait, what is Warehouse?\n\nThis talk will identify the key tools one might encounter when trying to distribute Python software, what they are used for, why they exist, and their history (including where their weird names come from). In addition, we'll see how they all work together, what it takes to make them work, and what the future has in store for Python packaging.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/AQsZsgJ30AE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=AQsZsgJ30AE",
        "original_url": "https://www.youtube.com/watch?v=AQsZsgJ30AE"
    },
    {
        "index": 53,
        "title": "David Beazley - Reinventing the Parser Generator  - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=zJ9z6Ge-vXs",
        "video_id": "zJ9z6Ge-vXs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2701,
        "view_count": 41955,
        "like_count": 704,
        "comment_count": 42,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "david beazley"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: David Beazley\n\nWriting lexers and parsers is a complex problem that often involves the use of special tools and domain specific languages (e.g., the lex/yacc tools on Unix).  In 2001, I wrote Python versions of these tools which can be found in the PLY project.  PLY predates a huge number of modern Python features including the iteration protocol, generators, decorators, metaclasses, and more.  As such, it relied on a variety of clever hacks to layer a domain specific parser specification language on top of Python itself. \n\nIn this talk, I discuss a modernization of the PLY project that abandons its past and freely abuses modern Python features including advanced metaclasses, guaranteed dictionary ordering, class decorators, type hints, and more.   The result of this work can be found in the SLY project.  However, this talk isn't so much about SLY as it is focused on how far you can push Python metaprogramming features to create domain-specific languages.   Prepare to be horrified--and to write code that will break your IDE. \n \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/zJ9z6Ge-vXs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zJ9z6Ge-vXs",
        "original_url": "https://www.youtube.com/watch?v=zJ9z6Ge-vXs"
    },
    {
        "index": 54,
        "title": "Christopher Swenson - Colossal Cave Adventure in Python... in the browser! - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=RojaWIoBfOo",
        "video_id": "RojaWIoBfOo",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2502,
        "view_count": 1985,
        "like_count": 26,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "christopher swenson"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Christopher Swenson\n\nColossal Cave, also known as Adventure or ADVENT, is the original text adventure. It was written in FORTRAN IV and there is practically no way to run the original program without translating it. We'll explore software archeology to write a Python interpreter to run the FORTRAN code as-is, without translating it. Come learn about pre-ASCII and 36-bit integers and writing interpreters in Python!\n\nAnd, we'll show how to use BeeWare's Batavia Python interpreter (in JavaScript) to execute the program. FORTRAN IV in Python in JavaScript in your browser!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/RojaWIoBfOo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=RojaWIoBfOo",
        "original_url": "https://www.youtube.com/watch?v=RojaWIoBfOo"
    },
    {
        "index": 55,
        "title": "Christopher Beacham / Lady Red - Visualizing Algorithms with Python and Programmable LEDs",
        "url": "https://www.youtube.com/watch?v=wJpUlnfwjbk",
        "video_id": "wJpUlnfwjbk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1818,
        "view_count": 1050,
        "like_count": 7,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "christopher beacham",
            "lady red"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Christopher Beacham / Lady Red\n\nRecently, a new LED strip specification, APA102, has been released which allows these strips to be driven by a general purpose CPU instead of a dedicated microcontroller. This allows us the luxury of controlling them with Python!\n\nI'll teach you about how to get the the hardware, how to think about programming for lights and how to build anything from a psychedelic art installation to home lighting to an educational tool. \n\nProgramming with lights is awesome because you can SEE bugs with your eyes. I think the use of these LED's have great potential as a teaching tool because of the immediacy of the feedback.\n\nLIVE hardware demos!  See Quicksort in brilliant colors!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/wJpUlnfwjbk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=wJpUlnfwjbk",
        "original_url": "https://www.youtube.com/watch?v=wJpUlnfwjbk"
    },
    {
        "index": 56,
        "title": "Carol Willing - Practical Sphinx - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=0ROZRNZkPS8",
        "video_id": "0ROZRNZkPS8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1640,
        "view_count": 33605,
        "like_count": 550,
        "comment_count": 14,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "carol willing"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Carol Willing\n\nEach member of your project team uses something different to document\ntheir work -- RestructuredText, Markdown, and Jupyter Notebooks. How do\nyou combine all of these into useful documentation for your project's users.\nSphinx and friends to the rescue!\n\nLearn how to integrate documentation into your everyday development\nworkflow, apply best practices, and use modern development tools and\nservices, like Travis CI and ReadTheDocs, to create engaging and up-to-date\ndocumentation which users and contributors will love.\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/0ROZRNZkPS8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0ROZRNZkPS8",
        "original_url": "https://www.youtube.com/watch?v=0ROZRNZkPS8"
    },
    {
        "index": 57,
        "title": "Anna Nicanorova - Data Visualization in Mixed Reality with Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=K94iCIy77pA",
        "video_id": "K94iCIy77pA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1124,
        "view_count": 1537,
        "like_count": 21,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "anna nicanorova"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Anna Nicanorova\n\nData Visualization charts are supposed to be our map to information. However, when making charts, customarily we are just re-sizing lines and circles based on metrics instead of creating data-driven version of reality.  The contemporary charting techniques have a few shortcomings (especially when dealing with high-dimensional dataset): \n\n* **Context Reduction**: in order to fit a high-dimensional dataset into a chart one needs to filter/ aggregate/ flatten data which results in reduction of full context of information.  Without context most of the charts show only a part of the story, that can potentially lead to data misinterpretation/misunderstanding. \n* **Numeric Thinking**: naturally humans have hard time perceiving big numbers. While data visualization is suppose to help us to conceptualize large volumes,  unless the dataset is carefully prepared, 2D charts rarely give us the intuitive grasp of magnitude. \n* **Perceptual de-humanization**: when examining charts it is easy to forget that we are dealing with activity in real world instead of lines/bars. \n\nAugmented/Mixed Reality can potentially solve all of the issues listed above by presenting an intuitive and interactive environment for data exploration. Three dimensional space provides conditions to create complex data stories with more “realistic assets” (beyond lines and bars). The talk would present the architecture required to create MR data visualization story with Python (70% of architecture), starting with drawing 3D assets in a data-driven way and finishing with deployment on MR devices. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/K94iCIy77pA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=K94iCIy77pA",
        "original_url": "https://www.youtube.com/watch?v=K94iCIy77pA"
    },
    {
        "index": 58,
        "title": "Amjith Ramanujam - How Netflix does failovers in 7 minutes flat - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=iQI56-up3Yk",
        "video_id": "iQI56-up3Yk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1906,
        "view_count": 9568,
        "like_count": 200,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "amjith ramanujam"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Amjith Ramanujam\n\nDuring peak hours, Netflix video streams make up more than one third of internet traffic. Netflix must stream uninterrupted in the face of widespread network issues, bad code deploys, AWS service outages, and much more. Failovers make this possible.\n\nFailover is the process of transferring all of our traffic from one region in AWS to another. While most of Netflix runs on Java, failovers are powered entirely by Python. Python's versatility and rich ecosystem means we can use it for everything from predicting our traffic patterns to orchestrating traffic movement, while dealing with the eventual consistency of AWS.\n\nToday, we can shift all of our 100 million+ users in under seven minutes. A lot of engineering work went into making this possible. The issues we faced and solutions we created have broad application to availability strategies in the cloud or the datacenter.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/iQI56-up3Yk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=iQI56-up3Yk",
        "original_url": "https://www.youtube.com/watch?v=iQI56-up3Yk"
    },
    {
        "index": 59,
        "title": "Amit Saha - Counter, Gauge, Upper 90 - Oh my! - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=R4kMwckrUlg",
        "video_id": "R4kMwckrUlg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1531,
        "view_count": 2139,
        "like_count": 19,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "amit saha"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Amit Saha\n\nSetting up application monitoring is often an afterthought, and in the speaker's opinion can be a bit overwhelming to get started with. What is a `metric`? What is a `gauge`? What is a `counter`? What's that `upper 90` metric you have up on your `dashboard`? And what *all* metrics should I monitor?\n\nThis talk aims to get you started on the monitoring journey in Python. In addition to clearing up some of the jargon, we will look at `statsd` and `prometheus` monitoring systems and how to integrate our applications with these.\n\nWithout the numbers, we are really flying blind!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/R4kMwckrUlg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=R4kMwckrUlg",
        "original_url": "https://www.youtube.com/watch?v=R4kMwckrUlg"
    },
    {
        "index": 60,
        "title": "Valery Calderon - Reactive Programming with RxPy - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=I5AZ3rTR4Wc",
        "video_id": "I5AZ3rTR4Wc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1167,
        "view_count": 5591,
        "like_count": 48,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "valery calderon"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Valery Calderon\n\nWeb applications contains lots of database operations, network calls, nested callbacks and other computationally expensive tasks that might take a long time to complete or even block other threads until it's done, here is where ReactiveX enters, it doesn't only gives us the facility to convert almost anything to a stream; variables, properties, user inputs, caches, etc to manage it asynchronously. But it also gives us an easy way to handle errors which is a hard task within asynchronous programming. ReactiveX makes our code more flexible, readable, maintainable and easy to write.\n\nWe will be exploring how ReactiveX help us to make things easier with its operators toolbox that can be used to filter, create, transform or unify any of those streams. We will learn that in just a few lines of maintainable code, we can have multiple web sockets which recieves multiple requests all handled by an asynchronous process that serves a filtered output.\n\nTo do that I decided to explain an example of the use with an example by implementing observables, observers/subscribers and subjects. We will start by requesting our data stream from the Github API with a Tornado web socket and then filtering and processing it asynchrounosly.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/I5AZ3rTR4Wc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=I5AZ3rTR4Wc",
        "original_url": "https://www.youtube.com/watch?v=I5AZ3rTR4Wc"
    },
    {
        "index": 61,
        "title": "Stephanie Kim - Exploring Deep Learning Framework PyTorch - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=LEkyvEZoDZg",
        "video_id": "LEkyvEZoDZg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 2581,
        "view_count": 5232,
        "like_count": 77,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "stephanie kim"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Stephanie Kim\n\nAnyone who is interested in deep learning has gotten their hands dirty playing around with Tensorflow, Google's open source deep learning framework. Tensorflow has its benefits like wide scale adoption, deployment on mobile, and support for distributed computing, but it also has a somewhat challenging learning curve, is difficult to debug, and hard to deploy in production. PyTorch is a new deep learning framework that solves a lot of those problems.\n\nPyTorch is only in beta, but users are rapidly adopting this modular deep learning framework. PyTorch supports tensor computation and dynamic computation graphs that allow you to change how the network behaves on the fly unlike static graphs that are used in frameworks such as Tensorflow. PyTorch offers modularity which enhances the ability to debug or see within the network and for many, is more intuitive to learn than Tensorflow.\n\nThis talk will objectively look at PyTorch and why it might be the best fit for your deep learning use case and we'll look at use cases that will showcase why you might want consider using Tensorflow instead.\n\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/LEkyvEZoDZg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LEkyvEZoDZg",
        "original_url": "https://www.youtube.com/watch?v=LEkyvEZoDZg"
    },
    {
        "index": 62,
        "title": "Sam Kitajima-Kimbrel - Bowerbirds of Technology: Architecture and Teams at Less-than-Google Scale",
        "url": "https://www.youtube.com/watch?v=0Z45gcIwwrQ",
        "video_id": "0Z45gcIwwrQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1798,
        "view_count": 675,
        "like_count": 10,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "sam kitajima-kimbrel"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Sam Kitajima-Kimbrel\n\nFacebook, Google, Uber, LinkedIn, and friends are the rarefied heights of software engineering. They encounter and solve problems at scales shared by few others, and as a result, their priorities in production engineering and architecture are just a bit different from the rest of us down here in the other 99% of services. Through deconstructing a few blog posts from these giants, we’ll evaluate just what is it that they’re thinking about when they build systems and whether any of their choices are relevant to those of us operating at high scale yet still something less than millions of requests per second.\n\nThis talk will go into depth on how to make technological decisions to meet your customers’ requirements without requiring a small army of engineers to answer 2 AM pages, and how to set realistic goals for your team around operations, uptime, communications, and disaster recovery.\n\nWith these guidelines in mind, you should be better equipped to say no (or yes!) the next time your team’s software hipster proposes moving everything to the Next Big Thing.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/0Z45gcIwwrQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0Z45gcIwwrQ",
        "original_url": "https://www.youtube.com/watch?v=0Z45gcIwwrQ"
    },
    {
        "index": 63,
        "title": "Philip James, Asheesh Laroia - All in the timing: How side channel attacks work - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=dT2xjgUInhQ",
        "video_id": "dT2xjgUInhQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1815,
        "view_count": 925,
        "like_count": 15,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "philip james",
            "asheesh laroia"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Philip James, Asheesh Laroia\n\nIn this talk, you’ll learn about a category of security issue known as side channel attacks. You’ll be amused to see how features like automatic data compression, short-circuit execution, and deterministic hashing can be abused to bypass security systems. No security background knowledge is required. The talk assumes at least intermediate Python experience.\n\nWe’ll take a tour of real side channel vulnerabilities in open source Python codebases, including the patches that fixed them. It also offers practical advice for avoiding these issues. My goal is to demystify this topic, even if you aren’t writing security-critical software.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/dT2xjgUInhQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dT2xjgUInhQ",
        "original_url": "https://www.youtube.com/watch?v=dT2xjgUInhQ"
    },
    {
        "index": 64,
        "title": "Padmaja Bhagwat - Listen, Attend, and Walk : Interpreting natural language navigational instructions",
        "url": "https://www.youtube.com/watch?v=MJBWAkE7cEo",
        "video_id": "MJBWAkE7cEo",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1662,
        "view_count": 866,
        "like_count": 19,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "padmaja bhagwat"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Padmaja Bhagwat\n\nImagine you have an appointment in a large building you do not know. Your host sent instructions describing how to reach their office. Though the instructions were fairly clear, in a few places, such as at the end, you had to infer what to do. How does a _robot (agent)_ interpret an instruction in the environment to infer the correct course of action? Enabling harmonious _Human - Robot Interaction_ is of primary importance if they are to work seamlessly alongside people.\n\nDealing with natural language instructions in hard because of two main reasons, first being, Humans - through their prior experience know how to interpret natural language but agents can’t, and second is overcoming the ambiguity that is inherently associated with natural language instructions. This talk is about how deep learning models were used to solve such complex and ambiguous problem of converting natural language instruction into its corresponding action sequence.\n\nFollowing verbal route instructions requires knowledge of language, space, action and perception. In this talk I shall be presenting, a neural sequence-to-sequence model for direction following, a task that is essential to realize effective autonomous agents.\n\nAt a high level, a sequence-to- sequence model is an end-to-end model made up of two recurrent neural networks: \n\n - **Encoder** - which takes the model’s input sequence as input and encodes it into a fixed-size context vector.\n - **Decoder** - which uses the context vector from above as a seed from which to generate an output sequence. \n\nFor this reason, sequence-to-sequence models are often referred to as _encoder-decoder_ models. The alignment based encoder-decoder model would translate the natural language instructions into corresponding action sequences. This model does not assume any prior linguistic knowledge: syntactic, semantic or lexical. The model learns the meaning of every word, including object names, verbs, spatial relations as well as syntax and the compositional semantics of the language on its own.\n\nIn this talk, steps involved in pre-processing of data, training the model, testing the model and final simulation of the model in the virtual environment will be discussed. This talk will also cover some of the challenges and trade-offs made while designing the model.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/MJBWAkE7cEo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MJBWAkE7cEo",
        "original_url": "https://www.youtube.com/watch?v=MJBWAkE7cEo"
    },
    {
        "index": 65,
        "title": "Nina Zakharenko - Elegant Solutions For Everyday Python Problems - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=WiQqqB9MlkA",
        "video_id": "WiQqqB9MlkA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1977,
        "view_count": 74446,
        "like_count": 1268,
        "comment_count": 38,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "nina zakharenko"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Nina Zakharenko\n\nAre you an intermediate python developer looking to level up? Luckily, python provides us with a unique set of tools to make our code more elegant and readable by providing language features that make your code more intuitive and cut down on repetition. In this talk, I’ll share practical pythonic solutions for supercharging your code. \n\nSpecifically, I'll cover:\n\n- What magic methods are, and show you how to use them in your own code.\n- When and how to use partial methods.\n- An explanation of ContextManagers and Decorators, as well as multiple techniques for implementing them.\n- How to effectively use `NamedTuples`, and even subclass and extend them!\n\nLastly, I'll go over some example code that ties many of these techniques together in a cohesive way. You'll leave this talk feeling confident about using these tools and techniques in your next python project!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/WiQqqB9MlkA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WiQqqB9MlkA",
        "original_url": "https://www.youtube.com/watch?v=WiQqqB9MlkA"
    },
    {
        "index": 66,
        "title": "Nathaniel J. Smith - Trio: Async concurrency for mere mortals - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=oLkfnc_UMcE",
        "video_id": "oLkfnc_UMcE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1920,
        "view_count": 28989,
        "like_count": 659,
        "comment_count": 20,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "nathaniel smith"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Nathaniel J. Smith\n\nConcurrent programs are super useful: think of web apps juggling lots of simultaneous downloads and websocket connections, chat bots tracking multiple concurrent conversations, or web spiders fetching pages in parallel. But *writing* concurrent programs is complicated, intimidating to newcomers, and often challenging even for experts.\n\nDoes it have to be? Python is famous for being simple and straightforward; can Python make concurrent programming simple and straightforward too? I think so. By carefully analyzing usability pitfalls in other libraries, and taking advantage of new Python 3 features, I've come up with a new set of primitives that make it dramatically easier to write correct concurrent programs, and implemented them in a new library called [Trio](https://trio.readthedocs.io). In this talk, I'll describe these primitives, and demonstrate how to use them to implement a basic algorithm for speeding up TCP connections. Compared to the best previous Python implementation, our version turns out to be easier to understand, more correct, and dramatically shorter.\n\nThis talk assumes basic familiarity with Python, but does *not* require any prior experience with concurrency, async/await, or networking.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/oLkfnc_UMcE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oLkfnc_UMcE",
        "original_url": "https://www.youtube.com/watch?v=oLkfnc_UMcE"
    },
    {
        "index": 67,
        "title": "Jiaqi Liu - Building a Data Pipeline with Testing in Mind - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=fRUCAt9WFpc",
        "video_id": "fRUCAt9WFpc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1215,
        "view_count": 7969,
        "like_count": 118,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "jiaqi liu"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jiaqi Liu\n\nIt’s one thing to build a robust data pipeline process in python but a whole other challenge to find tooling and build out the framework that allows for testing a data process. In order to truly iterate and develop a codebase, one has to be able to confidently test during the development process and monitor the production system. \n\nIn this talk, I hope to address the key components for building out end to end testing for data pipelines by borrowing concepts from how we test python web services. Just like how we want to check for healthy status codes from our API responses, we want to be able to check that a pipeline is working as expected given the correct inputs. We’ll talk about key features that allows a data pipeline to be easily testable and how to identify timeseries metrics that can be used to monitor the health of a data pipeline.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/fRUCAt9WFpc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fRUCAt9WFpc",
        "original_url": "https://www.youtube.com/watch?v=fRUCAt9WFpc"
    },
    {
        "index": 68,
        "title": "Brian Okken, Paul Everitt - Visual Testing with PyCharm and pytest - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=FjojZxDZscQ",
        "video_id": "FjojZxDZscQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1795,
        "view_count": 8563,
        "like_count": 83,
        "comment_count": 8,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "brian okken",
            "paul everitt"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Brian Okken, Paul Everitt\n\nKnow you should be doing testing but haven’t gotten over the hurdle to learn it? pytest is Python’s modern, friendly, and powerful testing framework. When paired with an IDE, testing gets a visual interface, making it much easier to get started.\n\nIn this talk we cover “visual testing”: starting, learning, using, and mastering test-driven development (TDD) with the help of a nice UI. We’ll show PyCharm Community Edition, a free and open-source Python IDE, as a productive TDD environment for pytest. Specifically, we’ll show a workflow using pytest and PyCharm that helps make tests speed up development, or at the very least help to make testing seem less \"in the way\" of other development activities\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/FjojZxDZscQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=FjojZxDZscQ",
        "original_url": "https://www.youtube.com/watch?v=FjojZxDZscQ"
    },
    {
        "index": 69,
        "title": "Allison Kaptur - Love your bugs - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=HuuYwUxM-ZY",
        "video_id": "HuuYwUxM-ZY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 1997,
        "view_count": 2837,
        "like_count": 65,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "allison kaptur"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Allison Kaptur\n\nWrestling bugs can be one of the most frustrating parts of programming - but with the right framing, bugs can also be our best allies. I'll tell the tales of two of my favorite bugs, including the time I triggered a DDOS of a logging cluster, and explain why I love them. I'll also give you concrete strategies for approaching tricky bugs and making them easier and more fun.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/HuuYwUxM-ZY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HuuYwUxM-ZY",
        "original_url": "https://www.youtube.com/watch?v=HuuYwUxM-ZY"
    },
    {
        "index": 70,
        "title": "Saturday Morning Lightning Talks + Keynotes - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=VJ0vibC_Hl0",
        "video_id": "VJ0vibC_Hl0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 5180,
        "view_count": 3207,
        "like_count": 31,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "ying li",
            "qumisha goss"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Keynote Speakers: Ying Li, Qumisha Goss",
        "thumbnail": "https://i.ytimg.com/vi_webp/VJ0vibC_Hl0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=VJ0vibC_Hl0",
        "original_url": "https://www.youtube.com/watch?v=VJ0vibC_Hl0"
    },
    {
        "index": 71,
        "title": "Lightning Talks - Friday - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=bTAFl8P2DkE",
        "video_id": "bTAFl8P2DkE",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180513",
        "duration": 3419,
        "view_count": 3359,
        "like_count": 29,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi_webp/bTAFl8P2DkE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=bTAFl8P2DkE",
        "original_url": "https://www.youtube.com/watch?v=bTAFl8P2DkE"
    },
    {
        "index": 72,
        "title": "Amirali Sanatinia - Getting Started with Blockchains and Cryptocurrencies in Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=_nSKR-lJjO0",
        "video_id": "_nSKR-lJjO0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 11885,
        "view_count": 2190,
        "like_count": 17,
        "comment_count": 9,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "amirali sanatinia"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Amirali Sanatinia\n\nBlockchains and cryptocurrencies are getting more popular everyday. The rise and wide adoption of cryptocurrencies such as Bitcoin has attracted a lot of attention, ranging from developers to bankers. However, many people are still not very comfortable with the ideas and concepts behind the blockchain, and workings of cryptocurrencies such as Bitcoin. Therefore, it stops them from entering and exploring the blockchain and cryptocurrency world.\n\n\nIn this tutorial, we first explore the cryptographic ideas behind the cryptocurrencies, including hashing, public/private cryptography. This will be followed by the basics of a simplified blockchain. We cover mining, incentives, payment records, ownership, etc. Then we delve into working and playing with a private Bitcoin network, by implementing simple programs in Python to create public/private keys, accounts, and transactions. We further look into services that provide exchange rate data on cryptocurrencies and analyze the data.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/_nSKR-lJjO0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_nSKR-lJjO0",
        "original_url": "https://www.youtube.com/watch?v=_nSKR-lJjO0"
    },
    {
        "index": 73,
        "title": "Jake VanderPlas - Exploratory Data Visualization with Vega, Vega-Lite, and Altair - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ms29ZPUKxbU",
        "video_id": "ms29ZPUKxbU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 11941,
        "view_count": 46531,
        "like_count": 751,
        "comment_count": 43,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "jake vanderplas"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jake VanderPlas\n\nExploring a new dataset visually can provide quick intuition into the relationships within the data. There are a few well-developed visualization packages in Python, but they often have very imperative APIs that force the user to focus on the mechanics of the visualization – tick locations, axis limits, legends, etc. – rather than the salient relationships within the data.\n\nThis tutorial will introduce data visualization with [Altair](http://altair-viz.github.io), a package designed for exploratory visualization in Python that features a declarative API, allowing data scientists to focus more on the data than the incidental details. Altair is based on the [Vega](https://vega.github.io/) and [Vega-Lite](https://vega.github.io/vega-lite/) visualization grammars, and thus automatically incorporates best practices drawn from recent research in effective data visualization.\n\nThe tutorial will provide an introduction to the Altair package and its API, but more importantly will dive into the core concepts of effective data visualization that can be applied using any visualization package or tool.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/ms29ZPUKxbU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ms29ZPUKxbU",
        "original_url": "https://www.youtube.com/watch?v=ms29ZPUKxbU"
    },
    {
        "index": 74,
        "title": "Christy Heaton - Intro to Spatial Analysis and Maps with Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=uRvTeK5Ndq8",
        "video_id": "uRvTeK5Ndq8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 9196,
        "view_count": 4311,
        "like_count": 65,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "christy heaton"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Christy Heaton\n\nIn this tutorial, we will introduce Python as a spatial problem solving and data visualization tool. To demonstrate the power of Python for spatial analysis, we will solve a spatial problem and make a beautiful map of our results. Along the way, we will discuss considerations when dealing with spatial data and the wide range of Python tools available for spatial analysis.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/uRvTeK5Ndq8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=uRvTeK5Ndq8",
        "original_url": "https://www.youtube.com/watch?v=uRvTeK5Ndq8"
    },
    {
        "index": 75,
        "title": "Shohei Hido - CuPy: A NumPy-compatible Library for GPU - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=MAz1xolSB68",
        "video_id": "MAz1xolSB68",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1811,
        "view_count": 6309,
        "like_count": 96,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "shohei hido"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Shohei Hido\n\n![Logo][https://raw.githubusercontent.com/cupy/cupy/master/docs/image/cupy_logo_1000px.png]\n\n# CuPy : NumPy-like API accelerated with CUDA\n\n[**Website**](https://cupy.chainer.org/) | [**Docs**](https://docs-cupy.chainer.org/en/stable/) | [**Install Guide**](https://docs-cupy.chainer.org/en/stable/install.html) | [**Tutorial**](https://docs-cupy.chainer.org/en/stable/tutorial/) | **Examples** ([Official](https://github.com/cupy/cupy/blob/master/examples)) | [**Forum**](https://groups.google.com/forum/#!forum/cupy)\n\nCuPy is an open-source library with NumPy syntax that increases speed by doing matrix operations on NVIDIA GPUs. It is accelerated with the CUDA platform from NVIDIA and also uses CUDA-related libraries, including cuBLAS, cuDNN, cuRAND, cuSOLVER, cuSPARSE, and NCCL, to make full use of the GPU architecture. CuPy's interface is highly compatible with NumPy; in most cases it can be used as a drop-in replacement. CuPy supports various methods, data types, indexing, broadcasting, and more.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/MAz1xolSB68/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MAz1xolSB68",
        "original_url": "https://www.youtube.com/watch?v=MAz1xolSB68"
    },
    {
        "index": 76,
        "title": "The importance of exploratory data analysis and data visualization in machine learning - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=zIcgCZl37tU",
        "video_id": "zIcgCZl37tU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1055,
        "view_count": 3903,
        "like_count": 54,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "opetunde adepoju"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Opetunde Adepoju\n\nAll the data in the world is useless if you cannot understand it. EDA and data visualization are the most crucial yet overlooked stage in analytics process. This is because they give insights on the most relevant features in a particular data set required to build an accurate model. It is often said that the more the data, the better the model but sometimes, this can be counter-productive as more data can be a disadvantage. EDA helps avoid that.\n\nEDA is useful for professionals while data visualization is useful for end-users. \n\nFor end-users: \nA good sketch is better than a long speech. The value of a machine learning model is not known unless it is used to make data driven decisions. It is therefore necessary for data scientists to master the act of telling a story for their work to stay relevant. This is where data visualization is extremely useful.  \nWe must remember that the end-users of the results are not professionals like us but people who know little or nothing about data analysis. For effective communication of our analysis, there is need for a detailed yet simple data visualization because the work of a data scientist is not done if data-driven insights and decisions are not made.\n\nFor professionals:\nHow do you ensure you are ready to use machine learning algorithms in a project? How do you choose the most suitable algorithms for your data set? How do you define the feature variables that can potentially be used for machine learning? Most data scientists ask these questions.  EDA answers these questions explicitly.\nAlso, EDA helps in understanding the data. Understanding the data brings familiarity with the data, giving insights on the best models that fit the data set, the features in the dataset that will be useful for building an accurate machine learning model, making feature engineering an easy process.\n\nIn this talk, I will give a detailed explanation on what EDA and data visualization are and why they are very helpful in building accurate machine learning models for analytics as well as enhancing productivity and better understanding for clients. I will also discuss the risks of not mastering EDA and data visualization as a data scientist.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/zIcgCZl37tU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zIcgCZl37tU",
        "original_url": "https://www.youtube.com/watch?v=zIcgCZl37tU"
    },
    {
        "index": 77,
        "title": "Liz Sander - Software Library APIs: Lessons Learned from scikit-learn - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=WCEXYvv-T5Q",
        "video_id": "WCEXYvv-T5Q",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1642,
        "view_count": 3437,
        "like_count": 46,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "liz sander"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Liz Sander\n\nWhen you think of an API, you’re probably thinking about a web service. But it’s important to think about your developer interface when designing a software library as well! I’ll talk about the scikit-learn package, and how its API makes it easy to construct complex models from simple building blocks, using three basic pieces: transformers, estimators, and meta-estimators. Then I’ll show how this interface enabled us to construct our own meta-estimator for model stacking. This will demonstrate how to implement new modeling techniques in a scikit-learn style, and more generally, the value of writing libraries with the developer interface in mind.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/WCEXYvv-T5Q/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WCEXYvv-T5Q",
        "original_url": "https://www.youtube.com/watch?v=WCEXYvv-T5Q"
    },
    {
        "index": 78,
        "title": "Kirk Kaiser - Birding with Python and Machine Learning - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=938yg4udxSc",
        "video_id": "938yg4udxSc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1388,
        "view_count": 1730,
        "like_count": 16,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "kirk kaiser"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Kirk Kaiser\n\nIn the past few years, the power of computer vision has exploded. In this talk, we'll apply a deep learning model to a bird feeder. We'll use that model to detect, identify, and record birds that come to a smart bird feeder.\n\nAlong the way, we'll learn about different platforms to deploy deep learning cameras on, from the lowly Raspberry PI all the way up to the powerful NVIDIA Jetson embedded computer with a built in GPU.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/938yg4udxSc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=938yg4udxSc",
        "original_url": "https://www.youtube.com/watch?v=938yg4udxSc"
    },
    {
        "index": 79,
        "title": "Julie Lavoie - Beyond scraping: how to use machine learning when you're not sure where to start",
        "url": "https://www.youtube.com/watch?v=BwC01zoSRBc",
        "video_id": "BwC01zoSRBc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1497,
        "view_count": 5127,
        "like_count": 80,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "julie lavoie"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Julie Lavoie\n\nScraping one web site for information is easy, scraping 10000 different sites is hard. Beyond page-specific scraping, how do you build a program than can extract the publication date of (almost) any news article online, no matter the web site?\n\nWe’ll cover when to use machine learning vs. humans or heuristics for data extraction, the different steps of how to phrase the problem in terms of machine learning, including feature selection on HTML documents, and issues that arise when turning research into production code.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/BwC01zoSRBc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BwC01zoSRBc",
        "original_url": "https://www.youtube.com/watch?v=BwC01zoSRBc"
    },
    {
        "index": 80,
        "title": "Irina Truong - Adapting from Spark to Dask: what to expect - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=X4YHGKj3V5M",
        "video_id": "X4YHGKj3V5M",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1675,
        "view_count": 5258,
        "like_count": 90,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "irina truong"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Irina Truong\n\nUntil very recently, Apache Spark has been a de facto standard choice of a framework for batch data processing. For Python developers, diving into Spark is challenging, because it requires learning the Java infrastructure, memory management, configuration management. The multiple layers of indirection also make it harder to debug things, especially when throwing the Pyspark wrapper into the equation.\n\nWith Dask emerging as a pure Python framework for parallel computing, Python developers might be looking at it with new hope, wondering if it might work for them in place of Spark. In this talk, I’m using a data aggregation example to highlight the important differences between the two frameworks, and make it clear how involved the switch may be.\n\nNote: Just in case it's unclear, there's no Java of any kind in this talk. All the code / examples use Python (PySpark).\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/X4YHGKj3V5M/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=X4YHGKj3V5M",
        "original_url": "https://www.youtube.com/watch?v=X4YHGKj3V5M"
    },
    {
        "index": 81,
        "title": "Debugging PySpark -- Or trying to make sense of a JVM stack trace when you were minding your own bus",
        "url": "https://www.youtube.com/watch?v=McgG09XriEI",
        "video_id": "McgG09XriEI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1557,
        "view_count": 2458,
        "like_count": 23,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "holden karau"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Holden Karau\n\nApache Spark is one of the most popular big data projects, offering greatly improved performance over traditional MapReduce models. Much of Apache Spark’s power comes from lazy evaluation along with intelligent pipelining, which can make debugging more challenging. This talk will examine how to debug Apache Spark applications, the different options for logging in PySpark, as well as some common errors and how to detect them.\n\nSpark’s own internal logging can often be quite verbose, and this talk will examine how to effectively search logs from Apache Spark to spot common problems. In addition to the internal logging, this talk will look at options for logging from within our program itself.\n\nSpark’s accumulators have gotten a bad rap because of how they interact in the event of cache misses or partial recomputes, but this talk will look at how to effectively use Spark’s current accumulators for debugging as well as a look to future for data property type accumulators which may be coming to Spark in future version.\n\nIn addition to reading logs, and instrumenting our program with accumulators, Spark’s UI can be of great help for quickly detecting certain types of problems.\n\nDebuggers are a wonderful tool, however when you have 100 computers the “wonder” can be a bit more like “pain”. This talk will look at how to connect remote debuggers, but also remind you that it’s probably not the easiest path forward.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/McgG09XriEI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=McgG09XriEI",
        "original_url": "https://www.youtube.com/watch?v=McgG09XriEI"
    },
    {
        "index": 82,
        "title": "Emily Morehouse-Valcarcel - The AST and Me - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=XhWvz4dK4ng",
        "video_id": "XhWvz4dK4ng",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1419,
        "view_count": 10337,
        "like_count": 229,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "emily morehouse-valcarcel"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Emily Morehouse-Valcarcel\n\nGet under the hood and learn about Python's beloved Abstract Syntax Tree. Ever wonder how Python code is run? Overheard people arguing about whether Python is interpreted or compiled? In this talk, we will delve into the lifecycle of a piece of Python code in order to understand the role that Python's Abstract Syntax Tree plays in shaping the runtime of your code. Utilizing your newfound knowledge of Python's AST, you'll get a taste of how you probably already rely on ASTs and how they can be used to build awesome tools.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/XhWvz4dK4ng/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XhWvz4dK4ng",
        "original_url": "https://www.youtube.com/watch?v=XhWvz4dK4ng"
    },
    {
        "index": 83,
        "title": "Anna Ossowski - Flourishing FLOSS: Making Your Project Successful - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=GmbaKdd6o6A",
        "video_id": "GmbaKdd6o6A",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1738,
        "view_count": 429,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "anna ossowski"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Anna Ossowski\n\nYou maintain an Open Source project with great code? Yet your project isn’t succeeding in the ways you want? Maybe you’re struggling with funding or documentation? Or you just can’t find new contributors and you’re drowning in issues and pull requests?\nOpen Source is made up of many components and we are often better-trained in methods for writing good code, than in methods for succeeding in the other dimensions we want our project to grow. \nIn this talk we’ll explore the different components of an Open Source project and how they work together. After this talk you’ll be well-equipped with a ideas and strategies for growing, cultivating, and nourishing your Open Source project. \n\nFor your project to succeed, all of its non-code components must be well-maintained. What are these different components and what methods can we learn to maintain them?\n\n* Build real relationships with your sponsors and determine ways how both sides can benefit from this relationship, don’t just ask people for money. \n* Establish a good communication system with your contributors: Keep them informed, listen to their feedback and input, make them feel heard. \n* Thank the people who worked on ticket triage or marketing, not just those who wrote code, in your release notes. \n* Make it easy for new contributors to get started: Write and maintain good documentation, answer questions in a friendly and timely manner. \n* Market and evangelize in the right places and at the right time: Give conference talks, organize sprints, keep your project’s Twitter account active, always curate new and interesting content on your blog or website.\n* Implement a Code of Conduct and enforce it if needed: Make your project a safe space to contribute for everyone. \n\nWith these methods and a half-dozen others, you’ll handle beautifully all the components your project needs to succeed.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/GmbaKdd6o6A/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GmbaKdd6o6A",
        "original_url": "https://www.youtube.com/watch?v=GmbaKdd6o6A"
    },
    {
        "index": 84,
        "title": "Andrew Godwin - Taking Django Async - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=-7taKQnndfo",
        "video_id": "-7taKQnndfo",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2417,
        "view_count": 10432,
        "like_count": 192,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "andrew godwin"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Andrew Godwin\n\nThe Django Channels project has taken a major turn with version 2.0, embracing Python's async functionality and building applications around an async event loop rather than worker processes.\n\nDoing this, however, wasn't easy. We'll look through some of the techniques used to make Django coexist in this async world, including handing off between async and sync code, writing fully asynchronous HTTP and WebSocket handling, and what this means for the future of Django, and maybe Python web frameworks in general.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/-7taKQnndfo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-7taKQnndfo",
        "original_url": "https://www.youtube.com/watch?v=-7taKQnndfo"
    },
    {
        "index": 85,
        "title": "Amanda Sopkin -  Randomness in Python: Creating Chaos in an Ordered Machine/Controlled Environment",
        "url": "https://www.youtube.com/watch?v=EGF4G2feXx4",
        "video_id": "EGF4G2feXx4",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1690,
        "view_count": 1123,
        "like_count": 16,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "amanda sopkin"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Amanda Sopkin\n\nThere are many computational needs for randomness--from creating a game to building a simulation involving naturally occurring randomness similar to the physical world. For most purposes using the python math module to create random numbers within a specific range can be done with no further questions, but sometimes we require a more nuanced implementation. \n\nWe will look at both pseudo-random number generators, which use statistically repeatable processes to generate seemingly random series and true random number generators, which inject physical processes like atmospheric noise to generate sequences of numbers. We will discuss the benefits and drawbacks of both approaches and common methods of implementing these two types of generators in python. \n\nFinally, we will look at several real applications for randomness and discuss the best method for generating “randomness” in each scenario. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/EGF4G2feXx4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=EGF4G2feXx4",
        "original_url": "https://www.youtube.com/watch?v=EGF4G2feXx4"
    },
    {
        "index": 86,
        "title": "Alex Petralia - Analyzing Data: What pandas and SQL Taught Me About Taking an Average - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=DlgG0QdrqAU",
        "video_id": "DlgG0QdrqAU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1562,
        "view_count": 11540,
        "like_count": 227,
        "comment_count": 17,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "alex petralia"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Alex Petralia\n\n“So tell me,” my manager said, “what is an average?”\n\nThere’s probably nothing worse than that sinking feeling when you finish an analysis, email it to your manager or client to review, and they point out a mistake so basic you can’t even fathom how you missed it. \n\nThis talk is about mine: how to take an average.\n\nAverages are something we use everywhere - it’s a simple np.mean() in pandas or AVG() in SQL. But recently I’ve come to appreciate just how easy it is to calculate this statistic incorrectly. We learn once - in middle school no less - how to take an average, and never revisit it. Then, when we are faced with multidimensional datasets (ie. pretty much every dataset out there), we never reconsider whether we should be taking an average the same way.\n\nIn this talk, we follow my arduous and humbling journey of learning how to properly take an average with multidimensional data. We will cover how improperly calculating it can produce grossly incorrect figures, which can slip into publications, research analyses and management reports.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/DlgG0QdrqAU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=DlgG0QdrqAU",
        "original_url": "https://www.youtube.com/watch?v=DlgG0QdrqAU"
    },
    {
        "index": 87,
        "title": "Using Python to build an AI to play and win SNES StreetFighter II - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=NyNUYYI-Pdg",
        "video_id": "NyNUYYI-Pdg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1837,
        "view_count": 4974,
        "like_count": 93,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "adam fletcher",
            "jonathan mortensen"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Adam Fletcher, Jonathan Mortensen\n\n![ryu-python](http://www.thesimplelogic.com/wordpress/wp-content/uploads/2017/12/ryu-python.png)\n\nHear the story of how we used Python to build an AI that plays Super StreetFighter II on the Super NES. We'll cover how Python provided the key glue between the SNES emulator and AI, and how the AI was built with `gym`, `keras-rl` and `tensorflow`. We'll show examples of game play and training, and talk about which bot beat which bot in the bot-v-bot tournament we ran. \n\nAfter this talk you'll know how easy it is to use Python and Python's machine learning libraries to teach a computer to play games.  You'll see a practical example of the same type of machine learning used by AlphaGo, and also get to find out which character in StreetFighter II is best to pick when playing your friends.\n\n  [1]: https://lh3.googleusercontent.com/Mh9uzCm4JeevMN5w-SWJgzWabrqOClAVMsa4jJtMRm-il1dP6oVTsRstJSQlbgKf4qh3A08yMZ36pwezsITA=w3230-h1786\n  [2]: http://www.thesimplelogic.com/wordpress/wp-content/uploads/2017/12/ryu-python.png\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/NyNUYYI-Pdg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=NyNUYYI-Pdg",
        "original_url": "https://www.youtube.com/watch?v=NyNUYYI-Pdg"
    },
    {
        "index": 88,
        "title": "Van Lindberg - Deconstructing the US Patent Database - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=lk6FGg5RzAk",
        "video_id": "lk6FGg5RzAk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1291,
        "view_count": 1282,
        "like_count": 16,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "van lindberg"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Van Lindberg\n\nIn 2011 I gave a talk about \"Killing Patents with Python\" - finding the right piece of prior art by using statistical natural language processing techniques on the US Patent Database. A number of unexpected benefits came out of that exploration, including the ability to describe large patent portfolios and businesses in a way that had not been done before.\n\nSince then, the state of the art has advanced - and so has the ability to do strange and wonderful things by applying the latest neural network-based analysis to the nine million patents and patent applications that people have submitted to the USPTO. Not only can we learn new things about what people have invented, we might just be able to get the computer to do a little \"inventing\" itself.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/lk6FGg5RzAk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=lk6FGg5RzAk",
        "original_url": "https://www.youtube.com/watch?v=lk6FGg5RzAk"
    },
    {
        "index": 89,
        "title": "Stacy Morse - Code Reviews Using Art Critique Principles - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=lpWvYxEW09k",
        "video_id": "lpWvYxEW09k",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1792,
        "view_count": 1817,
        "like_count": 34,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "stacy morse"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Stacy Morse\n\nCode reviews don't have to be a time consuming, morale zapping, arduous tasks. Not only can they catch bugs and errors but they can contribute in positive ways to the individual developer, the team, management and company as a whole.  \n\nArt critiques have existed in academia for hundreds of years. The methodology of the critique has evolved to be time sensitive and productive, while keeping the enthusiasm of the student artist intact.  \n\nThe purpose of the art critique is to get peers and mentors to look at the work and raise any problems they may see. It's also time where people with more experience could contribute their knowledge in a helpful way. This process is about producing the best work, quickly and in a productive and constructive way. \n \nThese methods can be applied to code review.  \n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/lpWvYxEW09k/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=lpWvYxEW09k",
        "original_url": "https://www.youtube.com/watch?v=lpWvYxEW09k"
    },
    {
        "index": 90,
        "title": "Code like an accountant: Designing data systems for accuracy, resilience and auditability",
        "url": "https://www.youtube.com/watch?v=svcBO-OjYfM",
        "video_id": "svcBO-OjYfM",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1888,
        "view_count": 4982,
        "like_count": 62,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "sophie rapoport"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Sophie Rapoport\n\nAs engineers, we care a lot about the reliability of our applications. When a website falls over, pagers go off, and engineers burst into action to bring a site back to life.  Postmortems are written, and teams develop strategies to prevent similar failures in the future.\n\nBut what about the reliability of our data? Would _you_ trust financial reports built on your data? \n\nIf not, what can you do to improve data health? If you _would_ trust these reports, how can you prove to customers, investors, and auditors alike that they should too?\n\nIn this talk, you’ll learn to apply strategies from the world of dev-ops to data. You’ll learn about questions auditors ask that can help you pinpoint data problems. You’ll also learn some accounting-specific tools for accurate and timely record keeping that I’ve found fascinating and helpful!\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/svcBO-OjYfM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=svcBO-OjYfM",
        "original_url": "https://www.youtube.com/watch?v=svcBO-OjYfM"
    },
    {
        "index": 91,
        "title": "Lisa Roach - Demystifying the Patch Function   - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ww1UsGZV8fQ",
        "video_id": "ww1UsGZV8fQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2227,
        "view_count": 47736,
        "like_count": 1222,
        "comment_count": 53,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "lisa roach"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Lisa Roach\n\nOne of the most challenging and important thing fors for Python developers learn is the unittest mock library. The patch function is in particular confusing- there are many different ways to use it. Should I use a context manager? Decorator? When would I use it manually? Improperly used patch functions can make unit tests useless, all the while making them look as if they are correctly testing code.Let’s learn how to wield patch with confidence!\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/ww1UsGZV8fQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ww1UsGZV8fQ",
        "original_url": "https://www.youtube.com/watch?v=ww1UsGZV8fQ"
    },
    {
        "index": 92,
        "title": "Kelsey Pedersen - Augmenting Human Decision Making with Data Science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=hnSgIUA57hg",
        "video_id": "hnSgIUA57hg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2064,
        "view_count": 1435,
        "like_count": 14,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "kelsey pedersen"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Kelsey Pedersen\n\nDo we even need humans? Humans and data science are flawed on their own. Humans lack the ability to process large volumes of information. Machines lack intuition, empathy, and nuance. You'll learn how to guide users of expert-use systems by applying data science to their user experience. This allows us to take advantage of the human-touch while leveraging our large datasets. What is the relationship between human decisions and algorithms? Are we thinking about data science all wrong? In this talk, you'll learn the ways we balance human decisions and data science throughout our applications, the challenges we have faced along the way and the future of the relationship between humans and data.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/hnSgIUA57hg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hnSgIUA57hg",
        "original_url": "https://www.youtube.com/watch?v=hnSgIUA57hg"
    },
    {
        "index": 93,
        "title": "Justin Crown - \"WHAT IS THIS MESS?\" - Writing tests for pre-existing code bases - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=LDdUuoI_lIg",
        "video_id": "LDdUuoI_lIg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1658,
        "view_count": 10323,
        "like_count": 256,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "justin crown"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Justin Crown\n\nMany of us practice test driven development, and pride ourselves in our code coverage. This is relatively easy to do when you begin a new project, but what happens when you take over an existing code base with little to no tests? Where and how do you start writing tests? This task can be very intimidating and frustrating, but can be accomplished!\n\nThis talk will run through some common approaches and methodologies for adding test coverage to pre-existing code (that you might not even be familiar with at all). The next time you take over an untested monolith,  you will be able to do the right thing and start writing tests instead of hoping for the best!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/LDdUuoI_lIg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LDdUuoI_lIg",
        "original_url": "https://www.youtube.com/watch?v=LDdUuoI_lIg"
    },
    {
        "index": 94,
        "title": "Julie Qiu - Build a Search Engine with Python + Elasticsearch - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=6_P_h2bDwYs",
        "video_id": "6_P_h2bDwYs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 10704,
        "view_count": 29139,
        "like_count": 271,
        "comment_count": 27,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "julie qiu"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Julie Qiu\n\nOne of the most common actions that we take when visiting any website is search. A common service that powers search for many sites is Elasticsearch -  but what makes it so powerful? What can you do with Elasticsearch that you can’t with a regular database?\n\nThis tutorial starts with an introduction to Elasticsearch architecture, including what makes it great for search and not so great for other use cases. We will then build an application together with a search engine powered by Elasticsearch. We will also discuss how to optimize search queries and scale as the volume of data increases.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/6_P_h2bDwYs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=6_P_h2bDwYs",
        "original_url": "https://www.youtube.com/watch?v=6_P_h2bDwYs"
    },
    {
        "index": 95,
        "title": "Julie Qiu - Strategies to Edit Production Data - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=43NiFtbNg_s",
        "video_id": "43NiFtbNg_s",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1610,
        "view_count": 660,
        "like_count": 8,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "julie qiu"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Julie Qiu\n\nAt some point, we all find ourselves at a SQL prompt making edits to the production database. We know it's a bad practice and we always intend to put in place safer infrastructure before we need to do it again — what does a better system actually look like?\n\nThis talk progresses through 5 strategies for teams using a Python stack to do SQL writes against a database, to achieve increasing safety and auditability:\n\n(1) Develop a process for raw SQL edits \n(2) Run scripts locally\n(3) Deploy and run scripts on an existing server\n(4) Use a task runner\n(5) Build a Script Runner service\n\nWe’ll talk about the pros and cons of each strategy and help you determine which one is right for your specific needs.\n\nBy the end of this talk you’ll be ready to start upgrading your infrastructure for making changes to your production database safely!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/43NiFtbNg_s/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=43NiFtbNg_s",
        "original_url": "https://www.youtube.com/watch?v=43NiFtbNg_s"
    },
    {
        "index": 96,
        "title": "Joyce Jang - Build Teams as an Engineer - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=-9NpTeddWds",
        "video_id": "-9NpTeddWds",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1915,
        "view_count": 830,
        "like_count": 15,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "joyce jang"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Joyce Jang\n\nWe build product and software as teams. And as anyone who as worked on a team knows, there’s often a lot more that goes into working together to build that product than actually just building the product itself. A highly functional team is not as elusive it may seem. Software engineering is a skill we’ve developed, but even more importantly software engineering on teams is another skill we’ve been practicing and improving on as an industry. Software engineering principles and best practices may seem to have very little to do with teamwork, but being able to thoughtfully apply some of what we’ve learned as engineers towards teamwork, we can help move towards creating such success with our teams.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/-9NpTeddWds/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-9NpTeddWds",
        "original_url": "https://www.youtube.com/watch?v=-9NpTeddWds"
    },
    {
        "index": 97,
        "title": "John Reese - Thinking Outside the GIL with AsyncIO and Multiprocessing - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=0kXaLh8Fz3k",
        "video_id": "0kXaLh8Fz3k",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1849,
        "view_count": 45251,
        "like_count": 868,
        "comment_count": 28,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "john reese"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: John Reese\n\nHave you ever written a small, elegant application that couldn't keep up with the growth of your data or user demand? Did your beautiful design end up buried in threads and locks? Did Python's very special Global Interpreter Lock make all of this an exercise in futility?\n\nThis talk is for you! With the combined powers of AsyncIO and multiprocessing, we'll redesign an old multithreaded application limited by the GIL into a modern solution that scales with the demand using only the standard library. No prior AsyncIO or multiprocessing experience required.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/0kXaLh8Fz3k/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0kXaLh8Fz3k",
        "original_url": "https://www.youtube.com/watch?v=0kXaLh8Fz3k"
    },
    {
        "index": 98,
        "title": "Jake VanderPlas - Performance Python: Seven Strategies for Optimizing Your Numerical Code",
        "url": "https://www.youtube.com/watch?v=zQeYx87mfyw",
        "video_id": "zQeYx87mfyw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1389,
        "view_count": 23289,
        "like_count": 600,
        "comment_count": 12,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "jake vanderplas"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jake VanderPlas\n\nPython provides a powerful platform for working with data, but often the most straightforward data analysis can be painfully slow. When used effectively, though, Python can be as fast as even compiled languages like C. This talk presents an overview of how to effectively approach optimization of numerical code in Python, touching on tools like numpy, pandas, scipy, cython, numba, and more.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/zQeYx87mfyw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zQeYx87mfyw",
        "original_url": "https://www.youtube.com/watch?v=zQeYx87mfyw"
    },
    {
        "index": 99,
        "title": "Hillel Wayne - Beyond Unit Tests: Taking Your Testing to the Next Level - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=MYucYon2-lk",
        "video_id": "MYucYon2-lk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1760,
        "view_count": 37486,
        "like_count": 840,
        "comment_count": 28,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "hillel wayne"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Hillel Wayne\n\nYou've used pytest and you've used mypy, but bugs are still slipping through your code. What's next? In this talk, we cover two simple but powerful tools for keeping your code problem-free. Property-based testing, provided by the [Hypothesis](https://hypothesis.readthedocs.io/en/latest/) library, lets you run hundreds of tests from a single template. Contracts, via [dpcontracts](https://github.com/deadpixi/contracts), make your program test itself. You'll learn how and why to use these tools and how to combine them with the rest of your testing suite.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/MYucYon2-lk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MYucYon2-lk",
        "original_url": "https://www.youtube.com/watch?v=MYucYon2-lk"
    },
    {
        "index": 100,
        "title": "David Gouldin - import time_travel: A Primer on Timezones in Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=CiegLU8ijFU",
        "video_id": "CiegLU8ijFU",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2463,
        "view_count": 1054,
        "like_count": 20,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "david gouldin"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: David Gouldin\n\nTimezones are one of those things every programmer loves to hate. Most of us, at\nleast in the US, just try to ignore them and hope nobody notices. Then twice a\nyear, we fear with impending doom those 3 small words: Daylight Saving Time.\n\nIt doesn't have to be this way. Armed with some best practices and a little help\nfrom supporting libraries, timezone-related bugs can be a thing of the past.\n\nThis talk explores standard library and 3rd party library timezone support, as\nwell as persistence and serialization techniques for timezone-aware datetimes.\nBy the end of the talk, the listener should feel confident in their ability to\ncorrectly store, send, receive, and manipulate datetime objects in any timezone.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/CiegLU8ijFU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CiegLU8ijFU",
        "original_url": "https://www.youtube.com/watch?v=CiegLU8ijFU"
    },
    {
        "index": 101,
        "title": "How we designed an inclusivity-first conference on a shoestring budget and short timeline",
        "url": "https://www.youtube.com/watch?v=C7ZhMnfUKIA",
        "video_id": "C7ZhMnfUKIA",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1868,
        "view_count": 398,
        "like_count": 14,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "christopher neugebauer",
            "josh simmons",
            "sam kitajima-kimbrel"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Christopher Neugebauer, Josh Simmons, Sam Kitajima-Kimbrel\n\nNew conferences rarely have resources to run the sort of outreach and inclusion programs that big conferences have. It’s hard to guess how much money you’ll have to spend, how many attendees you’ll have, and what your new community will look like. With so many things to worry about, it’s no surprise that most events don’t prioritise outreach until they’ve got a few years under their belt, if at all.\n\nIt doesn’t have to be this way, and it can even be easier to build a new event around outreach and inclusion than it is to build it in later on!\n\nThis talk shares the story of North Bay Python’s inaugural conference, which we planned in under 6 months, ran on a $40,000 budget, and built a welcoming community to make it real. We made inclusivity a founding principle and did so without compromising our speaker lineup while still attracting great sponsorship and hosted an event that almost every attendee wants to return to.\n\nIn this talk, we’re going to share with you how we built a conference, from the ground up, to be as inclusive as we could make it. We’ll touch on early organisation, marketing, and on-the ground logistics. Throughout the talk, you’ll learn:\n\n* How we designed a budget that let us prioritise outreach and inclusion activities\n* How we built the community that we wanted before the conference even started\n* How we ran an event that proved that we meant everything we said\n\nYou too can host a new conference with a great lineup on a shoestring budget and short timeline, and you can do it while being inclusive, welcoming, and putting attendee safety first. Find out how you can have your cake, eat it, and still have lots to share with your new community.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/C7ZhMnfUKIA/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=C7ZhMnfUKIA",
        "original_url": "https://www.youtube.com/watch?v=C7ZhMnfUKIA"
    },
    {
        "index": 102,
        "title": "Chris Schuhmacher - Coding through Adversity - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=dGz-K8x8k5k",
        "video_id": "dGz-K8x8k5k",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1672,
        "view_count": 730,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "chris schuhmacher"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Chris Schuhmacher\n\nIn 2017, I was released from prison after serving 17 years. One of the most transformational experiences I had while incarcerated was learning to code, through a pioneering new program called Code.7370 — the first coding curriculum in a United States prison.\n\nMore details: https://us.pycon.org/2018/schedule/presentation/141/\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/dGz-K8x8k5k/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dGz-K8x8k5k",
        "original_url": "https://www.youtube.com/watch?v=dGz-K8x8k5k"
    },
    {
        "index": 103,
        "title": "Andrew Knight - Behavior-Driven Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=EtIAbfCrsFI",
        "video_id": "EtIAbfCrsFI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1711,
        "view_count": 22352,
        "like_count": 306,
        "comment_count": 10,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "andrew knight"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Andrew Knight\n\nBehavior-Driven Development (BDD) is gaining popularity as an improved way to collaborate over product features and tests. In Python, **behave** is one of the leading BDD test frameworks. Using **behave**, teams write Gherkin behavior scenarios (e.g., tests) in plain language, and then programmers write Python code to automate the steps. BDD testing is great because tests are self-documenting and steps abide by the DRY principle. An example test could be:\n\n- Given the DuckDuckGo home page is displayed\n- When the user searches the phrase \"Python\"\n- Then search results for \"Python\" are shown\n\nThis talk will teach how to use **behave** to develop well-designed test scenarios and a robust automation framework. It will focus on the layers of the behave framework: feature files, step definitions, support classes, and config files. A full example project will be hosted on GitHub for audience members to reference after the talk.\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/EtIAbfCrsFI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=EtIAbfCrsFI",
        "original_url": "https://www.youtube.com/watch?v=EtIAbfCrsFI"
    },
    {
        "index": 104,
        "title": "Dan Callahan - Keynote - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ITksU31c1WY",
        "video_id": "ITksU31c1WY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1810,
        "view_count": 9538,
        "like_count": 150,
        "comment_count": 8,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "keynote",
            "dan callahan"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Dan Callahan",
        "thumbnail": "https://i.ytimg.com/vi_webp/ITksU31c1WY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ITksU31c1WY",
        "original_url": "https://www.youtube.com/watch?v=ITksU31c1WY"
    },
    {
        "index": 105,
        "title": "Stuart Williams - Python by Immersion - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=M5U9RwBJXiQ",
        "video_id": "M5U9RwBJXiQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 11248,
        "view_count": 2213,
        "like_count": 29,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "stuart williams"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Stuart Williams\n\nA fast introduction to Python for software developers with experience in other programming languages. Instead of a traditional top-down presentation of Python's features, syntax, and semantics, students are immersed in the language bottom-up with hundreds of small examples using the interactive interpreter to quickly gain familiarity with most of the core language features. Special attention is given to concepts in Python that often trip up those new to the language.\n\nNote that this tutorial is not designed to pair with the Python by Epiphanies tutorial, i.e. we recommend you sign up for one or the other, but no both.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/M5U9RwBJXiQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=M5U9RwBJXiQ",
        "original_url": "https://www.youtube.com/watch?v=M5U9RwBJXiQ"
    },
    {
        "index": 106,
        "title": "Shauna Gordon-McKeon - Beyond Django Basics - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=Fzlg95lrILk",
        "video_id": "Fzlg95lrILk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 11760,
        "view_count": 18446,
        "like_count": 276,
        "comment_count": 18,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "shauna gordon-mckeon"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Shauna Gordon-McKeon\n\nFinished with the official Django getting started guide, and not sure what to do next?  This tutorial has you covered.  \n\nWe'll extend the blog built in the official guide, using a variety of slightly more advanced Django features.  Topics to be covered include: extending the in-built user model, using the in-built login system, enhancing forms, using view mixins and overriding view methods, and changing up your database backend.  \n\nWith each extension, we'll talk about not just how to use these features but also *why* you'd want to use them.  We'll conclude by talking about other Django features you may want to learn about as you grow more proficient with this versatile framework.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/Fzlg95lrILk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Fzlg95lrILk",
        "original_url": "https://www.youtube.com/watch?v=Fzlg95lrILk"
    },
    {
        "index": 107,
        "title": "Mridul Seth, Eric Ma - Network Analysis Made Simple: Part II  - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=MRCLwmYTVpc",
        "video_id": "MRCLwmYTVpc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 12074,
        "view_count": 913,
        "like_count": 11,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "mridul seth",
            "eric ma"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Mridul Seth, Eric Ma\n\nDaenerys or Jon Snow? Diffusion of news through Twitter? JFK, ORD or ATL, do these codes look familiar? In this tutorial we build up on the fundamentals of Part 1 tutorial and look at various applications of network analysis to real world datasets like the US Airport Dataset, Game of Thrones character co-occurrence network, and foray into diffusion processes on networks. \n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/MRCLwmYTVpc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MRCLwmYTVpc",
        "original_url": "https://www.youtube.com/watch?v=MRCLwmYTVpc"
    },
    {
        "index": 108,
        "title": "Kevin Markham - Using pandas for Better (and Worse) Data Science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=0hsKLYfyQZc",
        "video_id": "0hsKLYfyQZc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 12042,
        "view_count": 16851,
        "like_count": 266,
        "comment_count": 15,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "kevin markham"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Kevin Markham\n\nThe pandas library is a powerful tool for multiple phases of the data science workflow, including data cleaning, visualization, and exploratory data analysis. However, proper data science requires careful coding, and pandas will not stop you from creating misleading plots, drawing incorrect conclusions, ignoring relevant data, including misleading data, or executing incorrect calculations.\n\nIn this tutorial, you'll perform a variety of data science tasks on a handful of real-world datasets using pandas. With each task, you'll learn how to avoid either a pandas pitfall or a data science pitfall. By the end of the tutorial, you'll be more confident that you're using pandas for good rather than evil!\n\nParticipants should have a working knowledge of pandas and an interest in data science, but are not required to have any experience with the data science workflow. Datasets will be provided by the instructor.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/0hsKLYfyQZc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0hsKLYfyQZc",
        "original_url": "https://www.youtube.com/watch?v=0hsKLYfyQZc"
    },
    {
        "index": 109,
        "title": "Harry  Percival - Intermediate testing with Django:  Outside-in TDD and Mocking effectively",
        "url": "https://www.youtube.com/watch?v=tFalO9KdCDM",
        "video_id": "tFalO9KdCDM",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 12047,
        "view_count": 1906,
        "like_count": 30,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "harry percival"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Harry  Percival\n\nOnce developers have got the hang of the basics of testing, problems of applying it in the real world soon start to manifest themselves, and common questions come up.  \n\n- What order should I write my tests and code in to avoid wasting time on blind alleys?  \n- If I'm using Mocks in my tests to avoid external dependencies, how do I avoid getting stuck with unwieldy, unreadable tests that don't actually tell me when things have gone wrong?\n- Unit tests vs integration tests vs functional tests, which should I use when, and what are the trade-offs?\n\nIn this tutorial we'll work through an example of using an existing Django codebase, adding a new feature, and experimenting with different testing techniques along the way to illustrate the pros and cons of each\n\n- bottom-up vs outside-in development\n- double-loop TDD\n- using Mocks to isolate application layers from each other\n- \"listen to your tests\", and learning to use ugly or convoluted tests as a signal for improving design.\n\nSome familiarity with Django is desirable, although skills learned in other web frameworks are transferrable.  By the end, you'll be able to go back to your own projects with practical experience, and a new way of thinking about how to optimise your tests for your own circumstances.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/tFalO9KdCDM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=tFalO9KdCDM",
        "original_url": "https://www.youtube.com/watch?v=tFalO9KdCDM"
    },
    {
        "index": 110,
        "title": "Chalmer Lowe - Statistics and probability: your first steps on the road to data science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=zzbw0JbiI6Y",
        "video_id": "zzbw0JbiI6Y",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 11648,
        "view_count": 5107,
        "like_count": 93,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "chalmer lowe"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Chalmer Lowe\n\nAn introduction to statistics and probability geared toward enabling attendees to understand the capabilities and limitations of statistics and probability and to help them implement calculations in their projects. Where possible/feasible, attendees will build their own tools to help them grasp the underlying concepts. In addition, attendees will be introduced to the pre-built tools in world-class Python and data science libraries to help them capitalize on the efficiencies and utility that those libraries offer.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/zzbw0JbiI6Y/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zzbw0JbiI6Y",
        "original_url": "https://www.youtube.com/watch?v=zzbw0JbiI6Y"
    },
    {
        "index": 111,
        "title": "Mariatta Wijaya - Build-a-GitHub-Bot Workshop - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=ZwvjtCjimiw",
        "video_id": "ZwvjtCjimiw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 6961,
        "view_count": 1240,
        "like_count": 16,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "mariatta wijaya"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Mariatta Wijaya\n\nGitHub provides a great platform for collaborating. You can take it to the next level by creating custom GitHub bots. By delegating some of the chores to a bot, you get to spend more time developing your project and collaborating with others.\n\nLearn how to automate your workflow by building a personal GitHub assistant for your own project. We'll use libraries called `gidgethub` and `aiohttp` to write a GitHub bot that does the following:\n\n- Greet the person who created an issue in your project. \n\n- Say thanks when a pull request has been closed.\n\n- Apply a label to issues or pull requests.\n\n- Gives a thumbs up reaction to comments **you** made. (becoming your own personal cheer squad).\n \nThe best part is, you get to do all of the above using Python 3.6! F-strings included!\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/ZwvjtCjimiw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZwvjtCjimiw",
        "original_url": "https://www.youtube.com/watch?v=ZwvjtCjimiw"
    },
    {
        "index": 112,
        "title": "Rizky Ariestiyansyah - When data meets education! The secret life of data in education - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=8OoR-P6wE0M",
        "video_id": "8OoR-P6wE0M",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1498,
        "view_count": 555,
        "like_count": 17,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "rizky ariestiyansyah"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Rizky Ariestiyansyah\n\nIn the last decades, the power of data and analytics has transformed instruction in education. Increasingly, large-scale data is available on student learning and interaction online. Much of this data represents student behavior. This has allowed researchers to model and track many elements of student learning that were not previously feasible at scale: engagement, affect, collaborative skill, and robust learning. In turn, these models can be used in prediction of long-term student outcomes, and to analyze the factors driving long-term success of students, \n\nThis talk will focus on secret life of data in education, the key points of my talk will be:\n\n- Data meets education\n- Course tracking\n- Student Behaviour\n- Data-driven education\n- Finishing strong\n\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/8OoR-P6wE0M/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8OoR-P6wE0M",
        "original_url": "https://www.youtube.com/watch?v=8OoR-P6wE0M"
    },
    {
        "index": 113,
        "title": "Liana Bakradze - Learning Python like a Pro - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=DG2AAhvh7nk",
        "video_id": "DG2AAhvh7nk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1545,
        "view_count": 5037,
        "like_count": 19,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "liana bakradze"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Liana Bakradze\n\nThere are many awesome tools to learn and teach Python to beginners. You can teach it with games, interactive tutorials and microcontrollers. However, if one is to stay in the world of programming, sooner or later one needs to start using more professional tools such as IDEs, debuggers, profilers, version control systems and databases. Needless to say, the transition from IDLE to PyCharm can be very frustrating.\n\nCreating your own course is a time-consuming process, but after the course has been created you also need to check students' solutions which consumes even more time. Wouldn't it be great to automate checking process and to concentrate on the creative part of content creation and explaining concepts to students?\n\nAs an attempt to solve these problems [EduTools plugin](https://plugins.jetbrains.com/plugin/10081-edutools) was created. It's a free open-source plugin that can be installed on PyCharm/IntelliJ IDEA IDEs to create and take programming courses right inside the IDE. This way a novice programmer dives into professional environment straight away and an educator gets a tool to automate solution checking. Not only the plugin allows to create courses, but it also comes with integration with [Stepik MOOC platform](https://stepik.org).\n\nIn this talk I'd like to demonstrate how one can create a course with automated checks using EduTools plugin, share it with students and connect to Stepik platform to gather solutions and statistics. I'll show how to create a simple course containing theory, code task with feedback prompts and test with choice problems. I'll also show how to use our existing free courses in class with the ability to view your students' solutions.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/DG2AAhvh7nk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=DG2AAhvh7nk",
        "original_url": "https://www.youtube.com/watch?v=DG2AAhvh7nk"
    },
    {
        "index": 114,
        "title": "Using GitHub, Travis CI, and Python to Introduce Collaborative Software Development - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=cxTXJ3N91s0",
        "video_id": "cxTXJ3N91s0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1593,
        "view_count": 2640,
        "like_count": 18,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "gregory kapfhammer"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Gregory M. Kapfhammer\n\nReal-world software engineering is collaborative, commonly involving the use of Git, GitHub, and continuous integration with Travis CI. This presentation will explain how to use these technologies and platforms to teach interdisciplinary and introductory courses in computer programming and software engineering. This presentation will first show how to create a GitHub organization connected to a GitHub Classroom with unlimited private repositories that contain instructor solutions and starter kits and assignment submissions for both individual and team-based programming assignments. The talk will next explain how to connect GitHub repositories to continuous integration servers hosted by Travis CI, thus supporting the cloud-based execution of tests and checks.\n\nThe presentation will subsequently introduce a Python program, called [GatorGrader](https://github.com/gkapfham/gatorgrader), that supports the local and cloud-based checking of a student's source code and technical writing for a programming project. GatorGrader can check, for example, that a submission contains the required number of comments and produces the correct number of lines of console output. Suitable for use on either a local workstation or a cloud-based server provided by Travis CI, GatorGrader can, for instance, ensure that a student makes the requisite number of commits to a GitHub repository and structures a program in a specified fashion. GatorGrader can also invoke external programs that ensure the quality of a student's technical writing. Finally, since most of the aforementioned assignments are designed to be completed in teams, this presentation introduces [GatorGrouper](https://github.com/GatorGrouper/gatorgrouper), another Python program that uses student responses on a Google Form to create suitable groups of students who collaboratively complete programming projects with GitHub.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/cxTXJ3N91s0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cxTXJ3N91s0",
        "original_url": "https://www.youtube.com/watch?v=cxTXJ3N91s0"
    },
    {
        "index": 115,
        "title": "Anubha Maneshwar - Pycamp 2K17: A Disclaimer - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=TcHkkzWBMKY",
        "video_id": "TcHkkzWBMKY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 984,
        "view_count": 441,
        "like_count": 10,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "anubha maneshwar"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Anubha Maneshwar\n\nNagpur is a tier-two city in India. There were no user groups, programming meetups and that too in Python? Impossible! It really seemed impossible to organise people and do something that will make them interested in learning and contributing. \nAs a student of Computer Engineering Bachelor's Degree Program, I always felt that drive missing in my fellow classmates.\nMy talk covers the journey of organising first Django Girls Meetup and first ever Python BootCamp of my city called \"Pycamp 2k17\". \nIt covers the journey of survival, how being a women it made tougher and how we ended up putting a disclaimer on our website because we never knew that name 'PyCamp' has a copyright! \nHow me and my team managed to sell tickets of worth INR 50,000 to the people who hardly ever heard of the name 'Python'. \nAnd cherry on the cake to get 'PSF' sponsoring the event.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/TcHkkzWBMKY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=TcHkkzWBMKY",
        "original_url": "https://www.youtube.com/watch?v=TcHkkzWBMKY"
    },
    {
        "index": 116,
        "title": "Meg Ray - Python for N00bs: A cognitive and educational approach - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=rCZgroTno1w",
        "video_id": "rCZgroTno1w",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1555,
        "view_count": 763,
        "like_count": 13,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "meg ray"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Meg Ray\n\nThis talk will put a new spin on helping complete beginners to use Python. We all tend to teach Python the way that we learned it. However, by applying lessons learned from cognitive science and educational psychology, we can better help a wide range of beginners and open up Python to new audiences. \n\nThe speaker will share examples of successes and failures in teaching Python in several contexts including high school classrooms, the Young Coders program, as well as online and printed curricula. Topics covered will include teaching the command line, helping new programming concepts to “stick,” increasing engagement with abstract concepts, and supporting the independence of new programmers.  \n\nThe Python community is an ecosystem built on learning from others and giving back to others. The strategies covered in this talk are useful for creating documentation for new users, writing a book or tutorial, teaching a child or adult, running a workshop, or teaching a class. \n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/rCZgroTno1w/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rCZgroTno1w",
        "original_url": "https://www.youtube.com/watch?v=rCZgroTno1w"
    },
    {
        "index": 117,
        "title": "Laura Jacob - GenZeal: A new generation of thinkers who design, develop, and distribute for tomorrow",
        "url": "https://www.youtube.com/watch?v=8mYlzEanNEY",
        "video_id": "8mYlzEanNEY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1678,
        "view_count": 281,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "laura jacob"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Laura Jacob\n\nThe GenZeal project is an after-school program where students learn design thinking, applied computational thinking, and programming skills to solve a problem in their community. Students research and work with local organizations and businesses to design and program microcontrollers that run entirely on renewable energy sources to solve a specific need. Through the process, students earn physical and digital badges for each skill they learn and apply with their project. Students learn applied design thinking, computational thinking, and open-source programming languages. They use what they learn to design, prototype, and program their project. The student projects are installed in the community and they monitor their use in conjunction with the community coach. \n\nI will provide details and examples of this project that can be replicated in small through large school districts, rural and urban. I will also explain how our school district redefined our curriculum from little computer science concepts to purposeful, applied PreK-12 computer science principles. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/8mYlzEanNEY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8mYlzEanNEY",
        "original_url": "https://www.youtube.com/watch?v=8mYlzEanNEY"
    },
    {
        "index": 118,
        "title": "Elizabeth Wickes - Hard Shouldn't be Hardship: Supporting Absolute Novices to Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=KAPeaEJeuc8",
        "video_id": "KAPeaEJeuc8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1815,
        "view_count": 471,
        "like_count": 12,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "elizabeth wickes"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Elizabeth Wickes\n\nWhen we tell novices that programming is hard, what are we warning them about? The intent may be to impress upon learners the importance of taking the workload seriously and starting early on the homework. However, “hard” is a loaded word and leaving novices alone with that word and their imaginations can create an unbounded variable, normalizing emotional extremes and all nighters.  The instructor often has no idea that \"hard\" has become \"hardship\".\n\nAn instructor's expertise can become a blindspot. We've learned what is normal through experience and can easily forget that we didn't know from the start.  We presume that those experiencing trouble will stop and reach out for help, but this will not always be the case if they don't know those situations look like.  Saying \"when you're stuck\" is not an objective,  actionable statement and leaves the unbounded suffering monster in play, particularly for students who are afraid of being a bother or being seen as asking a stupid question.  We need to be clear with our learners about when difficult material has moved outside our expectations and create a classroom environment where questions and clarifications are celebrated.\n\nThis talk will cover real and practical methods to help learners succeed in intensive programming courses, such as making your expectations clear, helping your students recognize when and how they should reach out for help, creating a positive emotional atmosphere in the classroom, and providing help efficiently.  Topics will include a ban on demotivational words, strategies for soliciting questions, the \"2 hour\" rule, the educational benefits of live coding, and recontextualizing error messages.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/KAPeaEJeuc8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=KAPeaEJeuc8",
        "original_url": "https://www.youtube.com/watch?v=KAPeaEJeuc8"
    },
    {
        "index": 119,
        "title": "Douglas Blank - Jupyter Tools for Teaching and Learning - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=iAvoE9vjZuc",
        "video_id": "iAvoE9vjZuc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2017,
        "view_count": 2318,
        "like_count": 27,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "douglas blank"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Douglas Blank\n\nProject Jupyter is the center of a set of technologies that grew out of simple tools to make Python easier to use. Today, Jupyter is composed of powerful client-server applications and protocols for computing in many programming languages. This talk focuses on using these technologies for pedagogical purposes. \n\nEvery course I have taught since the Fall semester of 2014 has been over the web via our JupyterHub server. These courses have included firstyear writing seminars, as well as courses in Programming Languages, Assembly Language, Introduction to Biology (in Python), and in Processing (Java-based). In this talk I hope to help identify best-practices for using Jupyter in the classroom. I will discuss and demonstrate tools and techniques, and explore the challenges of using Jupyter for teaching and learning.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/iAvoE9vjZuc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=iAvoE9vjZuc",
        "original_url": "https://www.youtube.com/watch?v=iAvoE9vjZuc"
    },
    {
        "index": 120,
        "title": "Devishi Jha - Teaching Python 101  - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=s36GwDng904",
        "video_id": "s36GwDng904",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 1328,
        "view_count": 1287,
        "like_count": 25,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "devishi jha"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Devishi Jha\n\nMy name is Devishi Jha, and I am a freshman at Valparaiso High School, Indiana. I have been taught programming by the Python community, and currently, I have been teaching python to children in my local community. Throughout elementary and middle school, I have been taught programming in many different ways. Then in late middle school, I taught programming to children at my local library. In this talk, I have compiled many teaching methods that I have found useful when learning python/teaching python. I also cover the ages to start coding, access to computers, and teaching at school vs. an after-school program. With the help of several coding teachers, school principals, and after-school coding program directors, I hope that this talk will serve as a guide to anyone who wants to teach python or find a good way to learn it.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/s36GwDng904/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=s36GwDng904",
        "original_url": "https://www.youtube.com/watch?v=s36GwDng904"
    },
    {
        "index": 121,
        "title": "Carol Willing - STEAM Workshops using Jupyter Notebooks, JupyterHub, and Binder - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=BqJyaejvVjQ",
        "video_id": "BqJyaejvVjQ",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 2084,
        "view_count": 1399,
        "like_count": 15,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "carol willing"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Carol Willing\n\nMiddle School and High School students can learn by doing. Jupyter Notebooks and the rich Python ecosystem with libraries on a variety of topics can engage many learners of the sciences and humanities. Interactive content, using Jupyter Widgets and visualization libraries, put the student in charge of manipulating content and extending their learning. Giving students engaging content in familiar subjects encourages them to develop and use computational skills to build upon their interests.\n\nOne difficulty of teaching workshops is access to computers and the ability to install software on those systems. This talk will demonstrate how a workshop organizer or teacher can deploy JupyterHub easily for a class using the Zero to JupyterHub Guide, Kubernetes, and Cloud Services. Even if students only have access to smartphones, tablets, or shared computers, a workshop can be held using Binder which allows a notebook environment to be served at the click of a button to any modern web browser.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/BqJyaejvVjQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BqJyaejvVjQ",
        "original_url": "https://www.youtube.com/watch?v=BqJyaejvVjQ"
    },
    {
        "index": 122,
        "title": "Aly Sivji, Joe Jasinski, tathagata dasgupta (t) - Docker for Data Science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=jbb1dbFaovg",
        "video_id": "jbb1dbFaovg",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180512",
        "duration": 12056,
        "view_count": 5269,
        "like_count": 50,
        "comment_count": 6,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "aly sivji",
            "joe jasinski",
            "tathagata dasgupta"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Aly Sivji, Joe Jasinski, tathagata dasgupta (t)\n\nJupyter notebooks simplify the process of developing and sharing Data Science projects across groups and organizations. However, when we want to deploy our work into production, we need to extract the model from the notebook and package it up with the required artifacts (data, dependencies, configurations, etc) to ensure it works in other environments. Containerization technologies such as Docker can be used to streamline this workflow.\n\nThis hands-on tutorial presents Docker in the context of Reproducible Data Science - from idea to application deployment. You will get a thorough introduction to the world of containers; learn how to incorporate Docker into various Data Science projects; and walk through the process of building a Machine Learning model in Jupyter and deploying it as a containerized Flask REST API.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/jbb1dbFaovg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jbb1dbFaovg",
        "original_url": "https://www.youtube.com/watch?v=jbb1dbFaovg"
    },
    {
        "index": 123,
        "title": "Wanjun Zhang - Coding as Enrichment: How to Empower Students with Creative Coding Experiences",
        "url": "https://www.youtube.com/watch?v=yN98sklnHSM",
        "video_id": "yN98sklnHSM",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180511",
        "duration": 1663,
        "view_count": 531,
        "like_count": 8,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "wanjun zhang"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Wanjun Zhang\n\nMy goal is to share resources, pedagogy, best practices and lessons learned in bringing hands-on coding workshops to underserved K-12 students.\n\nFor fall 2017 over ten weeks, [Code Park Houston](https://codeparkhouston.org/), a  a 501(c)(3) non-profit organization piloted a free after-school Creative Coding program at [BakerRipley - Leonel Castillo | BakerRipley](https://www.bakerripley.org/locations/leonel-castillo-community-center). We focused on **Coding as Enrichment** by encouraging our students to pursue creative endeavors such as storytelling with Minecraft and making procedural art with [p5.js | get started](https://p5js.org/get-started/). Instead of traversing a programming language’s syntax peculiarities, our students drew colorful lines, made interactive buttons, and shared their creations.\n\nWe also worked to provide a positive and collaborative learning environment. Our students were encouraged to learn by making mistakes and exploring his or her own interests. In the process, we just happened to facilitate knowledge in coding, problem-solving, electronics science and collaboration.\n\nWhen it comes to technology, the arts can be an unusual pathway to success. But we know and see that creativity is the secret sauce that inspires the next generation of diverse and passionate students.\n\nThis program was a rewarding experience for everyone involved. We faced and overcame many challenges. For the talk  I would like to share:\n\n**Tools of the Trade** — what software and hardware we used and why.\n**Classroom Set Up** — how to provide a positive and encouraging learning environment.\n**Best Practices for Tech Educators** — why we are learning facilitators.\n**Open Source Creative Coding Curriculum** — open source curriculum to be used in your own classroom!\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/yN98sklnHSM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=yN98sklnHSM",
        "original_url": "https://www.youtube.com/watch?v=yN98sklnHSM"
    },
    {
        "index": 124,
        "title": "Nicholas Tollervey - Mu - How to Make a Kids' Code Editor - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=T5IAf5vGGSk",
        "video_id": "T5IAf5vGGSk",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180511",
        "duration": 1696,
        "view_count": 5360,
        "like_count": 71,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "nicholas tollervey"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Nicholas Tollervey\n\n[The Raspberry Pi Foundation][1] receives feedback about the difficulties beginner programmers encounter when learning Python from thousands of volunteer mentors at after-school CodeClubs and thousands of teachers from around the world.\n\n[Mu][3] is a Python code editor for beginner programmers based upon this feedback.\n\nThis talk tells the story of Mu: why it was created, how we built it and includes a demonstration of how it works.\n\n  [1]: http://raspberrypi.org/\n  [3]: http://codewith.mu/\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/T5IAf5vGGSk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=T5IAf5vGGSk",
        "original_url": "https://www.youtube.com/watch?v=T5IAf5vGGSk"
    },
    {
        "index": 125,
        "title": "Lightning Talks - Thursday - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=fJj18KzomR0",
        "video_id": "fJj18KzomR0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180511",
        "duration": 2063,
        "view_count": 1341,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "lightning talks"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi_webp/fJj18KzomR0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fJj18KzomR0",
        "original_url": "https://www.youtube.com/watch?v=fJj18KzomR0"
    },
    {
        "index": 126,
        "title": "Skipper Seabold - Introduction to Python for Data Science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=W4WQi2OIy7o",
        "video_id": "W4WQi2OIy7o",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180511",
        "duration": 11940,
        "view_count": 10110,
        "like_count": 145,
        "comment_count": 17,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "skipper seabold"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Skipper Seabold\n\nThis tutorial introduces users to Python for data science. From data cleaning to model building, we will work through a series of short examples together using some real-world health inspection data. Attendees will have their hands on the keyboard, using the Python standard library and pandas to clean data and scikit-learn to build some models.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/W4WQi2OIy7o/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=W4WQi2OIy7o",
        "original_url": "https://www.youtube.com/watch?v=W4WQi2OIy7o"
    },
    {
        "index": 127,
        "title": "Ruben Orduz,  Nolan Brubaker - A Python-flavored Introduction to Containers And Kubernetes",
        "url": "https://www.youtube.com/watch?v=kx-048qE-TI",
        "video_id": "kx-048qE-TI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 10115,
        "view_count": 2357,
        "like_count": 17,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "ruben orduz",
            "nolan brubaker"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Ruben Orduz,  Nolan Brubaker\n\nContainers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \"table stakes\" and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren't practical or accessible in the world of \"classic\" paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. \n\nBut as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they’re all running and in healthy state? Enter Kubernetes.\n\nInitially developed internally by Google to replace their own complex container orchestration and management framework. It had to meet all the stringent standards and mind-boggling scale that Google operates on, but from the get-go an effort was made to make the learning curve and developer experience as approachable as possible. At certain point the creators made the case to Google to release kubernetes to the open source community -- a crucial decision that has helped “k8s” (as it’s commonly referred to as) reach rock star levels of fame and mind share not just in the FOSS community but also across industries and businesses from small operations to gigantic multinational corporations with thousands of deployments.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/kx-048qE-TI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=kx-048qE-TI",
        "original_url": "https://www.youtube.com/watch?v=kx-048qE-TI"
    },
    {
        "index": 128,
        "title": "Philip James - API-Driven Django - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=w0xgJ5C9Be8",
        "video_id": "w0xgJ5C9Be8",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11601,
        "view_count": 5270,
        "like_count": 65,
        "comment_count": 11,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "philip james"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Philip James\n\nAs the web continues to evolve, the demand for data-driven backends matched with rich frontend experiences grows every day. Django comes with a robust templating system and rendering engine, but more and more web applications using Django are just focusing on it’s API abilities.\n\nWhat if we could have the best of both worlds? What if we could use Django and django-rest-framework to write views that let us prototype quickly using the Django templating system, and have those same views return API responses to rich clients?\n\nIn this tutorial, we’ll build a sample data collection and display web application, taking advantage of the ways Django and django-rest-framework work together. The end result will be a web application you could adapt for many kinds of data collection needs, and you’ll come away knowing how to get a rich API and a frontend prototype out of just one Django view. \n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/w0xgJ5C9Be8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=w0xgJ5C9Be8",
        "original_url": "https://www.youtube.com/watch?v=w0xgJ5C9Be8"
    },
    {
        "index": 129,
        "title": "Harry  Percival - Introduction to TDD with Django - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=_rLPDxpXIFc",
        "video_id": "_rLPDxpXIFc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11513,
        "view_count": 17874,
        "like_count": 313,
        "comment_count": 12,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "harry percival"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Harry  Percival\n\nOver the past few years, automated software testing has moved from being a niche interest to being the default assumption.  This tutorial is an introduction to Test-Driven Development (TDD) for the world of web development in Python using the Django framework.\n\nThe tutorial is suitable for people who are new to either testing, or Django, or both, although some basic working knowledge of Python syntax (or programming in another language) is assumed.\n\nLearn about:\n- Unit testing and Functional testing\n- the Selenium browser automation tool\n- Python's unittest standard library module\n- Django models, views and templates\n- testing front-end and back-end code\n- refactoring, using tests \n- the unit-test/code cycle, or Red-Green-Refactor, TDD workflow\n- and the Testing Goat, Python's unofficial mascot for testing!\n\nCome prepared!  You'll need a Python 3.6 virtualenv with Django and Selenium installed.  Detailed instructions are provided [here](https://www.obeythetestinggoat.com/book/pre-requisite-installations.html).\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/_rLPDxpXIFc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_rLPDxpXIFc",
        "original_url": "https://www.youtube.com/watch?v=_rLPDxpXIFc"
    },
    {
        "index": 130,
        "title": "Eric Ma, Mridul Seth - Network Analysis Made Simple: Part I - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=HkbMUrgzwMs",
        "video_id": "HkbMUrgzwMs",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 12119,
        "view_count": 2798,
        "like_count": 33,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "eric ma",
            "mirdul seth"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Eric Ma, Mridul Seth\n\nHave you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. In this tutorial, which is Part I of a two-part series, we will use a variety of datasets to help you understand the fundamentals of network thinking, with a particular focus on constructing, summarizing, and visualizing complex networks. With this tutorial, you will be well equipped to explore advanced topics (dynamics on graphs, evolving graphs, and network propagation methods) in Part II.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/HkbMUrgzwMs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HkbMUrgzwMs",
        "original_url": "https://www.youtube.com/watch?v=HkbMUrgzwMs"
    },
    {
        "index": 131,
        "title": "Allen Downey - Complexity Science - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=F0uiLhZmtN4",
        "video_id": "F0uiLhZmtN4",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11283,
        "view_count": 2461,
        "like_count": 33,
        "comment_count": 2,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "allen downey"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Allen Downey\n\nComplexity Science is an approach to modeling systems using tools from discrete mathematics and computer science, including networks, cellular automata, and agent-based models.  It has applications in many areas of natural and social science.\n\nPython is a particularly good language for exploring and implementing models of complex systems.  In this tutorial, we present material from the draft second edition of *Think Complexity*, and from a class we teach at Olin College.  We will work with random networks using NetworkX, with cellular automata using NumPy, and we will implement simple agent-based models.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/F0uiLhZmtN4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=F0uiLhZmtN4",
        "original_url": "https://www.youtube.com/watch?v=F0uiLhZmtN4"
    },
    {
        "index": 132,
        "title": "Adam Englander - Practical API Security - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=wXnvEzw4hHI",
        "video_id": "wXnvEzw4hHI",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 10553,
        "view_count": 1695,
        "like_count": 23,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "adam englander"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Adam Englander\n\nWith the dominance of Mobile Apps, Single Page Apps for the Web, and Micro-Services, we are all building more APIs than ever before. Like many other developers, I had struggled with finding the right mix of security and simplicity for securing APIs. Some standards from the IETF have made it possible to accomplish both. Let me show you how to utilize existing libraries to lock down you API without writing a ton of code.\n\nIn this tutorial, you will learn how to write a secure API with future proof security utilizing JOSE. JOSE is a collection of complimentary standards: JWT, JWE, JWS, JWA, and JWK. JOSE is used by OAuth, OpenID, and others to secure communications between APIs and consumers. Now you can use it to secure your API.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/wXnvEzw4hHI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=wXnvEzw4hHI",
        "original_url": "https://www.youtube.com/watch?v=wXnvEzw4hHI"
    },
    {
        "index": 133,
        "title": "Melanie Crutchfield - Code Your Heart Out: Beginning Python for Human People with Feelings",
        "url": "https://www.youtube.com/watch?v=2Tg2gfzL_8s",
        "video_id": "2Tg2gfzL_8s",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 9130,
        "view_count": 982,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "melanie crutchfield"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Melanie Crutchfield\n\nThis tutorial is for people who are __brand new to Python__. It's for people with curioisty to feed, anxiety to overcome, and worlds to change. It's for people named Edna. (And others not named Edna.)\n\nDuring this tutorial you'll be encouraged to __bring your whole self to learning__. We'll start with the very basics of Python, keeping your fingers on the keyboard to gain as much practice as possible. Between strings, functions, and other fun Python-y things, we'll discuss learning deeply, __nourishing our brains__, and boosting happiness with science.\n\nNo prior experience required; come just as you are. __This is about being a whole person__. It's about learning Python, because Python is really cool. It's also about staying afloat. Being productive. Focusing. It's about finding joy in the error codes.\n\nCome play. It'll be awesome.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/2Tg2gfzL_8s/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=2Tg2gfzL_8s",
        "original_url": "https://www.youtube.com/watch?v=2Tg2gfzL_8s"
    },
    {
        "index": 134,
        "title": "Emily Xie - Making Art with Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=u3d-n41Tobw",
        "video_id": "u3d-n41Tobw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 5647,
        "view_count": 27104,
        "like_count": 739,
        "comment_count": 15,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "emily xie"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Emily Xie\n\nIn this workshop, we’ll learn how to make visual art using Processing.py, the Python mode for a powerful visual language library called Processing.\n\nThis tutorial walks through Processing.py from the ground up––from initial setup & foundational concepts, to the library's core functions, as well as its more advanced features. Topics covered include the coordinate system, shape primitives, lines, stroke, fill, color, mapping, events, and transforms. At the end, we'll break out of the tutorial format and give free reign for attendees to create, tinker, and experiment freely with the framework.\n\nYou’ll walk away with an art piece of your own original design, as well as a newfound appreciation for Python as a medium for creative expression. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/u3d-n41Tobw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=u3d-n41Tobw",
        "original_url": "https://www.youtube.com/watch?v=u3d-n41Tobw"
    },
    {
        "index": 135,
        "title": "Josh Lowe - Invited Speaker - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=TStuXnGfwVw",
        "video_id": "TStuXnGfwVw",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 1343,
        "view_count": 925,
        "like_count": 15,
        "comment_count": null,
        "tags": [
            "pycon",
            "python",
            "coding",
            "invited speaker",
            "josh lowe"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Josh Lowe",
        "thumbnail": "https://i.ytimg.com/vi_webp/TStuXnGfwVw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=TStuXnGfwVw",
        "original_url": "https://www.youtube.com/watch?v=TStuXnGfwVw"
    },
    {
        "index": 136,
        "title": "Jason Huggins - Keynote - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=q-x7jK72E6E",
        "video_id": "q-x7jK72E6E",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 1955,
        "view_count": 2472,
        "like_count": 14,
        "comment_count": 5,
        "tags": [
            "pycon",
            "python",
            "coding",
            "keynote",
            "jason huggins"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Jason Huggins",
        "thumbnail": "https://i.ytimg.com/vi_webp/q-x7jK72E6E/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=q-x7jK72E6E",
        "original_url": "https://www.youtube.com/watch?v=q-x7jK72E6E"
    },
    {
        "index": 137,
        "title": "Trey Hunner - Using List Comprehensions and Generator Expressions For Data Processing - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=_6U1XoxyyBY",
        "video_id": "_6U1XoxyyBY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 12103,
        "view_count": 27903,
        "like_count": 391,
        "comment_count": 30,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "trey hunner"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Trey Hunner\n\nCreating one list out of another list is a very common thing to do in Python, so common that Python includes a special construct just for this purpose: list comprehensions. We'll get hands-on experience using list comprehensions, set comprehensions, and dictionary comprehensions during this tutorial. We'll also learn how and when we can slightly tweak our comprehensions to turn them into more performant generator expressions.\n\nWe will learn some tricks for figuring out which of our \"for\" loops can be rewritten as comprehensions and which cannot. We will focus heavily on code readability and code clarity and we'll discuss when comprehensions help readability and when they hurt.\n\nAll new skills will be acquired through practice. We'll work through many exercises both individually and as a group. All students will also receive a cheat sheet which can be used for guidance during future comprehension-writing journeys.\n\nA laptop with Python installed is required for this workshop.",
        "thumbnail": "https://i.ytimg.com/vi_webp/_6U1XoxyyBY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_6U1XoxyyBY",
        "original_url": "https://www.youtube.com/watch?v=_6U1XoxyyBY"
    },
    {
        "index": 138,
        "title": "Tom Augspurger, James Crist, Martin Durant - Parallel Data Analysis with Dask - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=_UWRQZ3nFm0",
        "video_id": "_UWRQZ3nFm0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11630,
        "view_count": 3405,
        "like_count": 34,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "tom augspurger",
            "james crist",
            "martin durant",
            "tre"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Tom Augspurger, James Crist, Martin Durant\n\nThe libraries that power data analysis in Python are essentially limited to a single CPU core and to datasets that fit in RAM. Attendees will see how dask can parallelize their workflows, while still writing what looks like normal python, NumPy, or pandas code.\n\nDask is a parallel computing framework, with a focus on analytical computing. We'll start with `dask.delayed`, which helps parallelize your existing Python code. We’ll demonstrate `dask.delayed` on a small example, introducing the concepts at the heart of dask like the *task graph* and the *schedulers* that execute tasks. We’ll compare this approach to the simpler, but less flexible, parallelization methods available in the standard library like `concurrent.futures`.\n\nAttendees will see the high-level collections dask provides for writing regular Python, NumPy, or Pandas code that is then executed in parallel on datasets that may be larger than memory. These high level collections provide a familiar API, but the execution model is very different. We'll discuss concepts like the GIL, serialization, and other headaches that come up with parallel programming. We’ll use dask’s various schedulers to illustrate the differences between multi-threaded, multi-processes, and distributed computing.\n\nDask includes a distributed scheduler for executing task graphs on a cluster of machines. We’ll provide each person access to their own cluster.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/_UWRQZ3nFm0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_UWRQZ3nFm0",
        "original_url": "https://www.youtube.com/watch?v=_UWRQZ3nFm0"
    },
    {
        "index": 139,
        "title": "Stuart Williams - Python Epiphanies - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=-kqZtZj4Ky0",
        "video_id": "-kqZtZj4Ky0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11829,
        "view_count": 7408,
        "like_count": 84,
        "comment_count": 7,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "stuart williams"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Stuart Williams\n\nThis tutorial is for those who've been using Python for a while and would consider themselves at an intermediate level but are looking to get to the next level.\n\nWe'll explore core language features, look a bit under the hood, and to understand and learn how not to be too afraid of bytecode, monkey patching, decorators, and metaclasses.\n\nIn many ways Python is very similar to other programming languages.  However, in a few subtle ways it is quite different, and many software developers new to Python, after their initial successes, hit a plateau and have difficulty getting past it.  Others don't hit or perceive a plateau, but still find some of Python's features a little mysterious or confusing.  This tutorial will help deconstruct some common incorrect assumptions about Python.\n\nIf in your use of Python you sometimes feel like an outsider, like you're missing the inside jokes, like you have most of the puzzle pieces but they don't quite fit together yet, or like there are parts of Python you just don't get, this may be a good tutorial for you.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/-kqZtZj4Ky0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-kqZtZj4Ky0",
        "original_url": "https://www.youtube.com/watch?v=-kqZtZj4Ky0"
    },
    {
        "index": 140,
        "title": "Mike Müller - Faster Python Programs - Measure, don't Guess - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=DGrS0uwMuHY",
        "video_id": "DGrS0uwMuHY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 12207,
        "view_count": 2404,
        "like_count": 23,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "mike müller",
            "mike muller"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Mike Müller\n\nOptimization can often help to make Python programs faster or use less memory. Developing a strategy, establishing solid measuring and visualization techniques as well as knowing about algorithmic basics and datastructures are the foundation for a successful optimization. The tutorial will cover these topics.\nExamples will give you a hands-on experience on how to approach efficiently.\n\nPython is a great language. But it can be slow compared to other languages\nfor certain types of tasks. If applied appropriately, optimization may reduce\nprogram runtime or memory consumption considerably. But this often comes at a price. Optimization can be time consuming and the optimized program may be more complicated. This, in turn, means more maintenance effort. How do you find out if it is worthwhile to optimize your program? Where should you start?\n\nThis tutorial will help you to answer these questions. You will learn how\nto find  an optimization strategy based on quantitative and objective criteria.\nYou will experience that one's gut feeling what to optimize is often wrong.\n\nThe solution to this problem is: „Measure, Measure, and Measure!“. You will\nlearn how to measure program run times as well as profile CPU and memory.\nThere are great tools available. You will learn how to use some of them.\nMeasuring is not easy because, by definition, as soon as you start to measure,\nyou influence your system. Keeping this impact as small as possible is\nimportant. Therefore, we will cover different measuring techniques.\n\nFurthermore, we will look at algorithmic improvements. You will see that the\nright data structure for the job can make a big difference. Finally, you will\nlearn about different caching techniques.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/DGrS0uwMuHY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=DGrS0uwMuHY",
        "original_url": "https://www.youtube.com/watch?v=DGrS0uwMuHY"
    },
    {
        "index": 141,
        "title": "Ian Zelikman, Austin Hacker - Workflow Engines Up and Running - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=kw0RL9LZk9s",
        "video_id": "kw0RL9LZk9s",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 12314,
        "view_count": 2619,
        "like_count": 19,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "ian zelikman",
            "austin hacker"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Ian Zelikman, Austin Hacker\n\nJoin us for an introduction hands on tutorial of Python based workflow engines.\n\nYou will get to create, run and monitor a real time workflow job with two Python based popular workflow engines: Airflow and Luigi.\nDevelopers may have some long running batch jobs and may be using one of the tools we will cover or might be using a different engine, and would like a more in depth hands-on experience learning these tools.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/kw0RL9LZk9s/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=kw0RL9LZk9s",
        "original_url": "https://www.youtube.com/watch?v=kw0RL9LZk9s"
    },
    {
        "index": 142,
        "title": "Allen Downey - Introduction to Digital Signal Processing - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=SrJq2AzXZME",
        "video_id": "SrJq2AzXZME",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180510",
        "duration": 11124,
        "view_count": 60996,
        "like_count": 1007,
        "comment_count": 41,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "allen downey"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Allen Downey\n\nSpectral analysis is an important and useful technique in many areas of science and engineering, and the Fast Fourier Transform is one of the most important algorithms, but the fundamental ideas of signal processing are not as widely known as they should be.\n\nFortunately, Python provides an accessible and enjoyable way to get started.  In this tutorial, I present material from my book, *Think DSP*, and from a class I teach at Olin College.  We will work with audio signals, including music and other recorded sounds, and visualize their spectrums and spectrograms.  We will synthesize simple sounds and learn about harmonic structure, chirps, filtering, and convolution.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/SrJq2AzXZME/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SrJq2AzXZME",
        "original_url": "https://www.youtube.com/watch?v=SrJq2AzXZME"
    },
    {
        "index": 143,
        "title": "Tania  Sanchez Monroy - Down the rabbit hole. A 101 on reproducible workflows with Python",
        "url": "https://www.youtube.com/watch?v=VAXCrDrAPo0",
        "video_id": "VAXCrDrAPo0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180509",
        "duration": 11385,
        "view_count": 3392,
        "like_count": 29,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "tania sanchez monroy"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Tania  Sanchez Monroy\n\nThere has been a massive interest in reproducible research / data\nanalysis pipelines over the last few years.\nBut... how can I ensure that what I produce as a Python\nuser is reproducible?\nIn this tutorial we'll be taking you on a journey down the rabbit hole\nof reproducibility.\nWe'll be taking a step by step approach to reproducible scientific development\nin Python.\nThis means you get a crash course on version control, execution environments, testing,\nand continuous integration. And a guide on how to integrate all of these in your\nsoftware projects.\nBy the end of the course we hope you will have the necessary tools to make your\nPython workflows reproducible no matter if you're starting a brand new project\nor if this is ready to be shared with the world.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/VAXCrDrAPo0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=VAXCrDrAPo0",
        "original_url": "https://www.youtube.com/watch?v=VAXCrDrAPo0"
    },
    {
        "index": 144,
        "title": "Scott Sanderson - Foundations of Numerical Computing in Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=aGGbnMyeZs0",
        "video_id": "aGGbnMyeZs0",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180509",
        "duration": 12150,
        "view_count": 6596,
        "like_count": 78,
        "comment_count": 4,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "scott sanderson"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Scott Sanderson\n\nPython is one of the world's most popular programming languages for numerical\ncomputing. In areas of application like physical simulation, signal processing,\npredictive analytics, and more, engineers and data scientists increasingly use\nPython as their primary tool for working with numerical large-scale data.\n\nDespite this diversity of application domains, almost all numerical programming\nin Python builds upon a small foundation of libraries. In particular, the\n`numpy.ndarray` is the core data structure for the entire PyData ecosystem, and\nthe `numpy` library provides many of the foundational algorithms used to power\nmore domain-specific libraries.\n\nThe goal of this tutorial is to provide an introduction to numpy -- how it\nworks, how it's used, and what problems it aims to solve. In particular, we\nwill focus on building up students' mental model of how numpy works and how\n**idiomatic** usage of numpy allows us to implement algorithms much more\nefficiently than is possible in pure Python.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/aGGbnMyeZs0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=aGGbnMyeZs0",
        "original_url": "https://www.youtube.com/watch?v=aGGbnMyeZs0"
    },
    {
        "index": 145,
        "title": "Lights Camera Action! Scrape, explore, and model to predict Oscar winners & box office hits",
        "url": "https://www.youtube.com/watch?v=XMtygcrqHqo",
        "video_id": "XMtygcrqHqo",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180509",
        "duration": 11320,
        "view_count": 1603,
        "like_count": 6,
        "comment_count": 6,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "deborah hanus",
            "patricia hanus",
            "sebastian hanus",
            "veronica hanus"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speakers: Deborah Hanus, Patricia Hanus, Sebastian Hanus, Veronica Hanus\n\nUsing Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas, scikit learn, and matplotlib, you’ll predict whether a movie is likely to [win an Oscar](http://oscarpredictor.github.io/) or be a box office hit. We’ll step through the creation of an effective dataset: asking a question your data can answer, writing a web scraper, and answering those questions using nothing but Python libraries and data from the Internet. \n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/XMtygcrqHqo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XMtygcrqHqo",
        "original_url": "https://www.youtube.com/watch?v=XMtygcrqHqo"
    },
    {
        "index": 146,
        "title": "Moshe Zadka - Web Applications, A to Z - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=XKoK9wJjSqY",
        "video_id": "XKoK9wJjSqY",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180509",
        "duration": 12301,
        "view_count": 4457,
        "like_count": 39,
        "comment_count": 3,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "moshe zadka"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Moshe Zadka\n\nModern web applications have gotten complicated -- backend logic, front-end logic, storage and deployment options abound.\n\nThis tutorial will take a tour of all the pieces that go into making a web application, and show how they all fit together -- using specific choices, specific examples and a lot of hands-on programming, to give participants a chance to  actually write a web applications: all the parts. \n\nWe will use some external third-party services, but care is taken to fit into the free tier.\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/XKoK9wJjSqY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XKoK9wJjSqY",
        "original_url": "https://www.youtube.com/watch?v=XKoK9wJjSqY"
    },
    {
        "index": 147,
        "title": "Michael Herman - Going Serverless with OpenFaaS, Kubernetes, and Python - PyCon 2018",
        "url": "https://www.youtube.com/watch?v=zxcvyrhmjbc",
        "video_id": "zxcvyrhmjbc",
        "uploader": "PyCon 2018",
        "uploader_id": "@pycon2018",
        "uploader_url": "https://www.youtube.com/@pycon2018",
        "upload_date": "20180509",
        "duration": 11409,
        "view_count": 4404,
        "like_count": 46,
        "comment_count": 1,
        "tags": [
            "pycon",
            "python",
            "coding",
            "tutorial",
            "michael herman"
        ],
        "categories": [
            "People & Blogs"
        ],
        "description": "Speaker: Michael Herman\n\nOpenFaaS (Functions as a Service) is a framework for building serverless, event-driven functions with Docker and Kubernetes. \n\nIn this tutorial, you'll learn how to build and deploy a full-stack application that uses Flask (client-facing app) along with OpenFaaS to handle background processes.\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnail": "https://i.ytimg.com/vi_webp/zxcvyrhmjbc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zxcvyrhmjbc",
        "original_url": "https://www.youtube.com/watch?v=zxcvyrhmjbc"
    }
]